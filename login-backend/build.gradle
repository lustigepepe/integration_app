plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	// only for poor java applications
	//id applications
	
}

group = 'com.dashboard'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
 	//HttpSecurity http
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//Starter for building web, including RESTful, 
	//applications using Spring MVC. Uses Tomcat as the default embedded container
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//Starter for using Spring Data JPA with Hibernate
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//Starter for using Java Bean Validation with Hibernate Validator
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.security:spring-security-oauth2-client'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'io.jsonwebtoken:jjwt:0.5.1'
	
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


test {
	useJUnitPlatform()
}

tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
    }
}

// bootRun {
//     sourceResources sourceSets.main
//     main = 'com.dashboard.login.LoginApplication'
    
// }
