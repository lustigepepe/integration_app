{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst ComponentWrapper = styled.div`\n    margin-bottom: 10px;\n`;\nconst Label = styled.span`\n    font-size: 20px;\n    font-weight: 500\n    letter-spacing: .25px;\n `;\nconst SliderWrapper = styled.label`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n    margin: 0 0 -5.5px ${props => props.distance ? props.distance : '10px'};\n\n`;\nconst Checkbox = styled.input`\n    // opacity: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\nconst SliderRound = styled.span`\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    // background-color: #ccc;\n    -webkit-transition: .6s;\n    transition: .6s;\n    border-radius: 24px;\n    background-color: ${props => props.bColor};\n    \n    &:before {\n        border-radius: 50%;\n        position: absolute;\n        content: \"\";\n        height: 30px;\n        width: 30px;\n        left: 1px;\n        bottom: -3px;\n        // background-color: white;\n        background-color: F8F8FF;\n        background-color: ${props => props.fColor};\n        -webkit-transition: .6s;\n        transition: .6s;\n\n        ${props => props.checked && {\n  '-webkit-transform': 'translateX(27px)',\n  '-ms-transform': 'translateX(27px)',\n  transform: 'translateX(27px)'\n}}\n    }\n`;\n\nconst Slider = props => // const [isChecked, setIsChecked] = useState(true);\n// const isChangedFunc = () => {\n//     setIsChecked(!isChecked);\n//     var ev = new Event('change', { bubbles: true });\n//     ev.simulated = true;\n//     const slider = document.getElementById(\"slider\");\n//     // slider.value = isChecked;\n//     slider.dispatchEvent(ev);\n//     console.log('in slider imple ');\n// }\n// return (\nReact.createElement(ComponentWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, React.createElement(Label, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, props.name), React.createElement(SliderWrapper, {\n  distance: props.distance,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, React.createElement(Checkbox, {\n  type: \"checkbox\"\n  /* onChange={isChangedFunc} */\n  ,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}))) // );\n;\n\nconst Checkboxx = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({\n  type: \"checkbox\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n})));\n\nexport { Slider, Checkboxx };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js"],"names":["React","useState","styled","ComponentWrapper","div","Label","span","SliderWrapper","label","props","distance","Checkbox","input","SliderRound","bColor","fColor","checked","transform","Slider","name","Checkboxx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAI;;CAApC;AAIA,MAAMC,KAAK,GAAGH,MAAM,CAACI,IAAK;;;;EAA1B;AAMA,MAAMC,aAAa,GAAGL,MAAM,CAACM,KAAM;;;;;yBAKVC,KAAK,IAAKA,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAvB,GAAkC,MAAQ;;CAL7E;AASA,MAAMC,QAAQ,GAAGT,MAAM,CAACU,KAAM;;;;;;;CAA9B;AAUA,MAAMC,WAAW,GAAGX,MAAM,CAACI,IAAK;;;;;;;;;;;wBAWRG,KAAK,IAAIA,KAAK,CAACK,MAAO;;;;;;;;;;;;4BAYlBL,KAAK,IAAIA,KAAK,CAACM,MAAO;;;;UAIxCN,KAAK,IAAIA,KAAK,CAACO,OAAN,IAAkB;AAC7B,uBAAqB,kBADQ;AAE7B,mBAAiB,kBAFY;AAG7BC,EAAAA,SAAS,EAAE;AAHkB,CAI9B;;CA/BP;;AAmCA,MAAMC,MAAM,GAAIT,KAAD,IACX;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,KAAK,CAACU,IADX,CADJ,EAII,oBAAC,aAAD;AAAe,EAAA,QAAQ,EAAEV,KAAK,CAACC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGI,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAC;AAAW;AAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CAJJ,CAfW,CAyBX;AAzBJ;;AA6BA,MAAMU,SAAS,GAAGX,KAAK,IACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAQ,EAAA,IAAI,EAAC;AAAb,GAA4BA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFJ,CADJ;;AAMA,SAASS,MAAT,EAAiBE,SAAjB","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components'\n\n\nconst ComponentWrapper = styled.div`\n    margin-bottom: 10px;\n`;\n\nconst Label = styled.span`\n    font-size: 20px;\n    font-weight: 500\n    letter-spacing: .25px;\n `;\n\nconst SliderWrapper = styled.label`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n    margin: 0 0 -5.5px ${props => (props.distance ? props.distance : '10px')};\n\n`;\n\nconst Checkbox = styled.input`\n    // opacity: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\n\n\nconst SliderRound = styled.span`\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    // background-color: #ccc;\n    -webkit-transition: .6s;\n    transition: .6s;\n    border-radius: 24px;\n    background-color: ${props => props.bColor};\n    \n    &:before {\n        border-radius: 50%;\n        position: absolute;\n        content: \"\";\n        height: 30px;\n        width: 30px;\n        left: 1px;\n        bottom: -3px;\n        // background-color: white;\n        background-color: F8F8FF;\n        background-color: ${props => props.fColor};\n        -webkit-transition: .6s;\n        transition: .6s;\n\n        ${props => props.checked && ({\n        '-webkit-transform': 'translateX(27px)',\n        '-ms-transform': 'translateX(27px)',\n        transform: 'translateX(27px)',\n    })}\n    }\n`;\n\nconst Slider = (props) => (\n    // const [isChecked, setIsChecked] = useState(true);\n\n    // const isChangedFunc = () => {\n    //     setIsChecked(!isChecked);\n    //     var ev = new Event('change', { bubbles: true });\n    //     ev.simulated = true;\n    //     const slider = document.getElementById(\"slider\");\n    //     // slider.value = isChecked;\n    //     slider.dispatchEvent(ev);\n    //     console.log('in slider imple ');\n    // }\n\n\n    // return (\n    <ComponentWrapper>\n        <Label>\n            {props.name}\n        </Label>\n        <SliderWrapper distance={props.distance}>\n\n            {/* <SliderRound bColor={props.checked ? '#6da4ed' : '#ccc'} fColor={props.checked ? '#1a73e8' : '#F8F8FF'} checked={props.checked ? true : false} /> */}\n            <Checkbox type=\"checkbox\" /* onChange={isChangedFunc} */ />\n        </SliderWrapper>\n    </ComponentWrapper >\n    // );\n);\n\n\nconst Checkboxx = props => (\n    <div>\n\n        < input type=\"checkbox\" {...props} />\n    </div>\n);\nexport { Slider, Checkboxx };"]},"metadata":{},"sourceType":"module"}