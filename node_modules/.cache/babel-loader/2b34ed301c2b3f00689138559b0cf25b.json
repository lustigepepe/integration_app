{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { SimpleFlexWrapper, WrapAreas } from '../styles/Wrapper';\nimport { Button, ButtonElement } from '../styles/Buttons';\nimport { generateCsv } from '../services/CsvGenerationService';\nimport { csvPlaceholders } from '../services/Helpers'; // Minus button - -\n\nconst ComponentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n\n    @media(max-width: 862px) {\n        margin-left: 280px;\n        display: block\n    }\n`;\nconst InputWrapper = styled.div`\n`;\nconst ResetButton = styled(ButtonElement)`\n    background-color: #dc3545;\n    padding: 2px 8px ;\n    margin-left: 25px;\n    border-color: #dc3545;\n`;\n\nconst WebStiteName = props => React.createElement(ComponentWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(InputWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(InputText, Object.assign({\n  placeholder: csvPlaceholders.WEBSITE,\n  value: props.website\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}))));\n\nconst AddUnits = props => React.createElement(SimpleFlexWrapper, {\n  top: \"20px\",\n  justify: \"space-between\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(InputText, Object.assign({\n  name: props.pos,\n  placeholder: csvPlaceholders.UNIT,\n  value: props.unit\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})), React.createElement(InputText, Object.assign({\n  name: props.pos,\n  placeholder: csvPlaceholders.SIZES,\n  value: props.sizes\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})), React.createElement(InputText, Object.assign({\n  name: props.pos,\n  placeholder: csvPlaceholders.PLACEMENT,\n  value: props.placement\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n})), React.createElement(ResetButton, Object.assign({\n  name: props.pos,\n  onClick: props.removeUnit\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), \" Delete  \"));\n\nconst CsvGeneration = props => {\n  const [units, setUnits] = useState([{\n    unit: '',\n    sizes: '',\n    placement: '',\n    website: ''\n  }]);\n  const [website, setWebsite] = useState('');\n\n  const generate = () => {\n    generateCsv([...units]);\n  };\n\n  useEffect(() => {\n    // if (props.location.state.config)\n    // console.log('csv', JSON.stringify(props.location.state.slots));\n    const temp = [{\n      \"bidder\": \"criteo\",\n      \"params\": {\n        \"sizes\": [{\n          \"size\": \"300x250\",\n          \"pl\": \"medrect1\"\n        }, {\n          \"size\": \"300x250\",\n          \"pl\": \"medrect2\"\n        }, {\n          \"size\": \"728x90\",\n          \"pl\": \"leader\"\n        }, {\n          \"size\": \"320x100\",\n          \"pl\": \"leader\"\n        }],\n        \"placementnameing\": \"\",\n        \"addStringtocall\": [[\"networkId\", 3724], [\"publisherSubId\", \"s\"]]\n      }\n    }];\n    console.log('csv', props.location.state.config);\n\n    if (props.location.state.csv) {\n      setWebsite(props.location.state.config.addStringtocall[2][2]);\n      const _units = units;\n      props.location.state.csv.slots.forEach((el, index) => {\n        _units[index].unit = el.unit;\n        _units[index].sizes = el.sizes;\n        _units[index].placement = '';\n        _units[index].website = website;\n      }); // setSlots(props.location.state.slots);\n    }\n  });\n\n  const removeUnit = event => {\n    const _units = [];\n\n    for (var unitTemp in units) {\n      if (unitTemp === event.target.name) {\n        continue;\n      } else {\n        _units.push(units[unitTemp]);\n      }\n    }\n\n    setUnits(_units);\n  };\n\n  const addUnit = event => {\n    var _units = [...units];\n\n    _units.push({\n      unit: '',\n      sizes: '',\n      placement: ''\n    });\n\n    setUnits(_units);\n  };\n\n  const unitChanged = event => {\n    var _unit = units[event.target.name];\n\n    switch (event.target.placeholder) {\n      case csvPlaceholders.UNIT:\n        _unit.unit = event.target.value;\n        break;\n\n      case csvPlaceholders.SIZES:\n        _unit.sizes = event.target.value;\n        break;\n\n      case csvPlaceholders.PLACEMENT:\n        _unit.placement = event.target.value;\n        break;\n\n      case csvPlaceholders.WEBSITE:\n        _unit.website = event.target.value;\n    }\n  };\n\n  return React.createElement(SimpleFlexWrapper, {\n    top: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(WrapAreas, {\n    adjust: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(WebStiteName, {\n    website: website,\n    onChange: unitChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), units.map((ele, index) => React.createElement(AddUnits, {\n    key: ele + index,\n    pos: index,\n    onChange: unitChanged,\n    removeUnit: removeUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(AddButton, {\n    justify: 'center',\n    top: '50px',\n    onClick: addUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Generate\",\n    onClick: generate,\n    top: \"80px\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })));\n};\n\nexport { CsvGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js"],"names":["React","useState","useEffect","styled","AddButton","InputText","SimpleFlexWrapper","WrapAreas","Button","ButtonElement","generateCsv","csvPlaceholders","ComponentWrapper","div","InputWrapper","ResetButton","WebStiteName","props","WEBSITE","website","AddUnits","pos","UNIT","unit","SIZES","sizes","PLACEMENT","placement","removeUnit","CsvGeneration","units","setUnits","setWebsite","generate","temp","console","log","location","state","config","csv","addStringtocall","_units","slots","forEach","el","index","event","unitTemp","target","name","push","addUnit","unitChanged","_unit","placeholder","value","map","ele"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { SimpleFlexWrapper, WrapAreas } from '../styles/Wrapper';\nimport { Button, ButtonElement } from '../styles/Buttons';\nimport { generateCsv } from '../services/CsvGenerationService';\nimport { csvPlaceholders } from '../services/Helpers';\n\n\n// Minus button - -\nconst ComponentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n\n    @media(max-width: 862px) {\n        margin-left: 280px;\n        display: block\n    }\n`;\n\nconst InputWrapper = styled.div`\n`;\n\nconst ResetButton = styled(ButtonElement)`\n    background-color: #dc3545;\n    padding: 2px 8px ;\n    margin-left: 25px;\n    border-color: #dc3545;\n`;\n\nconst WebStiteName = (props) => (\n    <ComponentWrapper>\n        <InputWrapper >\n            <InputText placeholder={csvPlaceholders.WEBSITE} value={props.website} {...props} />\n        </InputWrapper>\n    </ComponentWrapper>\n);\n\nconst AddUnits = (props) => (\n    <SimpleFlexWrapper top=\"20px\" justify=\"space-between\">\n        <InputText name={props.pos} placeholder={csvPlaceholders.UNIT} value={props.unit} {...props} />\n        <InputText name={props.pos} placeholder={csvPlaceholders.SIZES} value={props.sizes} {...props} />\n        <InputText name={props.pos} placeholder={csvPlaceholders.PLACEMENT} value={props.placement}   {...props} />\n        <ResetButton name={props.pos} onClick={props.removeUnit}{...props}> Delete  </ResetButton>\n    </SimpleFlexWrapper>\n);\n\nconst CsvGeneration = (props) => {\n    const [units, setUnits] = useState([{ unit: '', sizes: '', placement: '', website: '' }]);\n    const [website, setWebsite] = useState('');\n    const generate = () => {\n        generateCsv([...units]);\n    }\n\n    useEffect(() => {\n        // if (props.location.state.config)\n        // console.log('csv', JSON.stringify(props.location.state.slots));\n        const temp = [{ \"bidder\": \"criteo\", \"params\": { \"sizes\": [{ \"size\": \"300x250\", \"pl\": \"medrect1\" }, { \"size\": \"300x250\", \"pl\": \"medrect2\" }, { \"size\": \"728x90\", \"pl\": \"leader\" }, { \"size\": \"320x100\", \"pl\": \"leader\" }], \"placementnameing\": \"\", \"addStringtocall\": [[\"networkId\", 3724], [\"publisherSubId\", \"s\"]] } }];\n        console.log('csv', props.location.state.config);\n        if (props.location.state.csv) {\n            setWebsite(props.location.state.config.addStringtocall[2][2]);\n            const _units = units;\n            props.location.state.csv.slots.forEach((el, index) => {\n                _units[index].unit = el.unit;\n                _units[index].sizes = el.sizes;\n                _units[index].placement = '';\n                _units[index].website = website;\n            })\n\n            // setSlots(props.location.state.slots);\n        }\n    });\n\n    const removeUnit = (event) => {\n        const _units = [];\n        for (var unitTemp in units) {\n            if (unitTemp === event.target.name) {\n                continue;\n            } else {\n                _units.push(units[unitTemp]);\n            }\n        }\n        setUnits(_units);\n    }\n\n    const addUnit = (event) => {\n        var _units = [...units];\n        _units.push({ unit: '', sizes: '', placement: '' });\n        setUnits(_units);\n    }\n\n    const unitChanged = (event) => {\n        var _unit = units[event.target.name];\n        switch (event.target.placeholder) {\n            case csvPlaceholders.UNIT:\n                _unit.unit = event.target.value;\n                break;\n            case csvPlaceholders.SIZES:\n                _unit.sizes = event.target.value;\n                break;\n            case csvPlaceholders.PLACEMENT:\n                _unit.placement = event.target.value;\n                break;\n            case csvPlaceholders.WEBSITE:\n                _unit.website = event.target.value;\n        }\n    }\n    return (\n        <SimpleFlexWrapper top=\"30px\">\n            <WrapAreas adjust=\"true\">\n                <WebStiteName website={website} onChange={unitChanged} />\n                {units.map((ele, index) => (\n                    <AddUnits key={ele + index} pos={index} onChange={unitChanged} removeUnit={removeUnit} />\n                ))}\n                <AddButton justify={'center'} top={'50px'} onClick={addUnit} />\n                <Button name={\"Generate\"} onClick={generate} top=\"80px\" justify=\"center\" />\n            </WrapAreas>\n        </SimpleFlexWrapper>\n    );\n}\n\nexport { CsvGeneration };\n"]},"metadata":{},"sourceType":"module"}