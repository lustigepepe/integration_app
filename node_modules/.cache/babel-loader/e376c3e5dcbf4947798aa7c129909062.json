{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { SimpleFlexWrapper, WrapAreas } from '../styles/FlexWrapper';\nimport { Button, ButtonElement } from '../styles/Buttons'; // Minus button - -\n\nconst ComponentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n\n    @media(max-width: 862px) {\n        margin-left: 280px;\n        display: block\n    }\n`;\nconst InputWrapper = styled.div`\n`;\nconst ResetButton = styled(ButtonElement)`\n    background-color: transparent;\n    padding: 2px 8px ;\n    margin-left: 25px;\n    border-color: #6c757d;\n`;\n\nconst WebStiteName = props => React.createElement(ComponentWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(InputWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(InputText, {\n  placeholder: \"Website Placement\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})));\n\nconst CsvGeneration = () => {\n  const [units, setUnits] = useState([{\n    unit: '',\n    sizes: '',\n    placement: ''\n  }]);\n\n  const generate = () => {\n    console.log('bum dingsing');\n  };\n\n  useEffect(() => {\n    console.log('effects: ', units);\n  });\n\n  const AddUnits = props => React.createElement(SimpleFlexWrapper, {\n    top: \"20px\",\n    justify: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(InputText, Object.assign({\n    name: props.pos,\n    onChange: unitChanged,\n    placeholder: \"Unit\",\n    value: units[0].unit\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(InputText, Object.assign({\n    name: props.pos,\n    placeholder: \"Sizes\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(InputText, Object.assign({\n    name: props.pos,\n    placeholder: \"Placement\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(ResetButton, {\n    name: props.pos,\n    onClick: removeUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Delete  \"));\n\n  const removeUnit = event => {\n    const _units = [];\n\n    for (var unitTemp in units) {\n      if (unitTemp === event.target.name) {\n        continue;\n      } else {\n        _units.push(units[unitTemp]);\n      }\n    }\n\n    setUnits(_units);\n  };\n\n  const addUnit = event => {\n    var _units = [...units];\n\n    _units.push({\n      unit: '',\n      sizes: '',\n      placement: ''\n    });\n\n    setUnits(_units);\n  };\n\n  const unitChanged = event => {\n    // var _unit = units[event.target.name];\n    // switch (event.target.placeholder) {\n    //     case 'Unit':\n    //         _unit.unit = event.target.value;\n    //         break;\n    //     case 'Sizes':\n    //         _unit.sizes = event.target.value;\n    //         break;\n    //     case 'Placement':\n    //         _unit.placement = event.target.value;\n    // }\n    // console.log('inchange')\n    // units[event.target.name] = _unit\n    setUnits([{\n      unit: event.target.value\n    }]); // setUnits([...units]);\n  };\n\n  const ch = e => {\n    // units[0].unit = e.target.value;\n    setUnits([{\n      unit: e.target.value\n    }]);\n  }; // <InputText key={ele + index} placeholder=\"Unit\" pos={index} value={units[0].unit} onChange={ch} />\n\n\n  return React.createElement(SimpleFlexWrapper, {\n    top: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(WrapAreas, {\n    adjust: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(WebStiteName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), units.map((ele, index) => // <AddUnits key={ele + index} pos={index}  data={ele} />\n  React.createElement(SimpleFlexWrapper, {\n    top: \"20px\",\n    justify: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    name: index,\n    placeholder: \"Unit\",\n    onChange: unitChanged,\n    value: ele.unit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(InputText, {\n    name: index,\n    placeholder: \"Sizes\",\n    onChange: unitChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(InputText, {\n    name: index,\n    placeholder: \"Placement\",\n    onChange: unitChanged,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(ResetButton, {\n    name: index,\n    onClick: removeUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Delete  \"))), React.createElement(AddButton, {\n    justify: 'center',\n    top: '50px',\n    onClick: addUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Generate\",\n    onClick: generate,\n    top: \"80px\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })));\n};\n\nexport { CsvGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js"],"names":["React","useState","useEffect","styled","AddButton","InputText","SimpleFlexWrapper","WrapAreas","Button","ButtonElement","ComponentWrapper","div","InputWrapper","ResetButton","WebStiteName","props","CsvGeneration","units","setUnits","unit","sizes","placement","generate","console","log","AddUnits","pos","unitChanged","removeUnit","event","_units","unitTemp","target","name","push","addUnit","value","ch","e","map","ele","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { SimpleFlexWrapper, WrapAreas } from '../styles/FlexWrapper';\nimport { Button, ButtonElement } from '../styles/Buttons';\n\n\n// Minus button - -\nconst ComponentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n\n    @media(max-width: 862px) {\n        margin-left: 280px;\n        display: block\n    }\n`;\n\nconst InputWrapper = styled.div`\n`;\n\nconst ResetButton = styled(ButtonElement)`\n    background-color: transparent;\n    padding: 2px 8px ;\n    margin-left: 25px;\n    border-color: #6c757d;\n`;\nconst WebStiteName = (props) => (\n    <ComponentWrapper>\n        <InputWrapper >\n            <InputText placeholder=\"Website Placement\" />\n        </InputWrapper>\n    </ComponentWrapper>\n);\n\n\n\nconst CsvGeneration = () => {\n\n    const [units, setUnits] = useState([{ unit: '', sizes: '', placement: '' }]);\n    const generate = () => {\n        console.log('bum dingsing');\n    }\n\n    useEffect(() => {\n        console.log('effects: ', units);\n    });\n\n    const AddUnits = (props) => (\n        <SimpleFlexWrapper top=\"20px\" justify=\"space-between\">\n            <InputText name={props.pos} onChange={unitChanged} placeholder=\"Unit\" value={units[0].unit} {...props} />\n            <InputText name={props.pos} placeholder=\"Sizes\" {...props} />\n            <InputText name={props.pos} placeholder=\"Placement\"   {...props} />\n            <ResetButton name={props.pos} onClick={removeUnit} >Delete  </ResetButton>\n        </SimpleFlexWrapper>\n    );\n\n    const removeUnit = (event) => {\n        const _units = [];\n        for (var unitTemp in units) {\n            if (unitTemp === event.target.name) {\n                continue;\n            } else {\n                _units.push(units[unitTemp]);\n            }\n        }\n        setUnits(_units);\n    }\n\n    const addUnit = (event) => {\n        var _units = [...units];\n        _units.push({ unit: '', sizes: '', placement: '' });\n        setUnits(_units);\n    }\n\n    const unitChanged = (event) => {\n        // var _unit = units[event.target.name];\n        // switch (event.target.placeholder) {\n        //     case 'Unit':\n        //         _unit.unit = event.target.value;\n        //         break;\n        //     case 'Sizes':\n        //         _unit.sizes = event.target.value;\n        //         break;\n        //     case 'Placement':\n        //         _unit.placement = event.target.value;\n        // }\n        // console.log('inchange')\n        // units[event.target.name] = _unit\n\n        setUnits([{ unit: event.target.value }])\n        // setUnits([...units]);\n    }\n\n    const ch = (e) => {\n        // units[0].unit = e.target.value;\n        setUnits([{ unit: e.target.value }])\n    }\n\n    // <InputText key={ele + index} placeholder=\"Unit\" pos={index} value={units[0].unit} onChange={ch} />\n    return (\n        <SimpleFlexWrapper top=\"30px\">\n            <WrapAreas adjust=\"true\">\n                <WebStiteName />\n                {units.map((ele, index) => (\n                    // <AddUnits key={ele + index} pos={index}  data={ele} />\n                    <SimpleFlexWrapper top=\"20px\" justify=\"space-between\">\n                        <InputText name={index} placeholder=\"Unit\" onChange={unitChanged} value={ele.unit} />\n                        <InputText name={index} placeholder=\"Sizes\" onChange={unitChanged} />\n                        <InputText name={index} placeholder=\"Placement\" onChange={unitChanged} />\n                        <ResetButton name={index} onClick={removeUnit} >Delete  </ResetButton>\n                    </SimpleFlexWrapper>\n\n                ))}\n                <AddButton justify={'center'} top={'50px'} onClick={addUnit} />\n                <Button name={\"Generate\"} onClick={generate} top=\"80px\" justify=\"center\" />\n            </WrapAreas>\n        </SimpleFlexWrapper>\n    );\n}\n\nexport { CsvGeneration };\n"]},"metadata":{},"sourceType":"module"}