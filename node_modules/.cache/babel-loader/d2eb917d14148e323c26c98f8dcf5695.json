{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst SliderWrapper = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n`; // ${CheckBox}:focus & {\n//     box-shadow: 0 0 1px #2196F3;\n// } \n// ${CheckBox}:checked & {\n//     -webkit-transform: translateX(26px);\n//     -ms-transform: translateX(26px);\n//     transform: translateX(26px);\n// }\n\nconst SliderRound = styled.span`\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        // background-color: #ccc;\n        -webkit-transition: 9s;\n        transition: .9s;\n        border-radius: 24px;\n        \n        &:before {\n            border-radius: 50%;\n            position: absolute;\n            content: \"\";\n            height: 30px;\n            width: 30px;\n            left: 1px;\n            bottom: -3px;\n            // background-color: white;\n            background-color: ${props => props.fColor};\n            -webkit-transition: .9s;\n            transition: .9s;\n\n            ${props => props.checked && {\n  background: 'darkred',\n  border: '1px solid limegreen',\n  borderRadius: '25px'\n}}\n        background-color: ${props => props.bColor};\n`;\n\nconst Slider = () => {\n  const [isChecked, setIsChecked] = useState(true);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(SliderWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(SliderRound, {\n    bColor: isChecked ? '#6da4ed' : '#ccc',\n    fColor: isChecked ? '#1a73e8' : 'white',\n    onMouseDown: () => {\n      setIsChecked(!isChecked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => console.log('ooooo', isChecked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nexport { Slider };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js"],"names":["React","useState","styled","SliderWrapper","div","SliderRound","span","props","fColor","checked","background","border","borderRadius","bColor","Slider","isChecked","setIsChecked","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;;;;;CAAjC,C,CASA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,WAAW,GAAGH,MAAM,CAACI,IAAK;;;;;;;;;;;;;;;;;;;;;gCAqBAC,KAAK,IAAIA,KAAK,CAACC,MAAO;;;;cAIxCD,KAAK,IAAIA,KAAK,CAACE,OAAN,IAAkB;AACzBC,EAAAA,UAAU,EAAE,SADa;AAEzBC,EAAAA,MAAM,EAAE,qBAFiB;AAGzBC,EAAAA,YAAY,EAAE;AAHW,CAKhC;4BACmBL,KAAK,IAAIA,KAAK,CAACM,MAAO;CA/BlD;;AAkCA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEc,SAAS,GAAG,SAAH,GAAe,MAA7C;AAAqD,IAAA,MAAM,EAAEA,SAAS,GAAG,SAAH,GAAe,OAArF;AACA,IAAA,WAAW,EAAE,MAAM;AAAEC,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAA0B,KAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAMI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAE,MAAME,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,SAArB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAeH,CAnBD;;AAwBA,SAASD,MAAT","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components'\n\nconst SliderWrapper = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n`;\n\n\n\n// ${CheckBox}:focus & {\n//     box-shadow: 0 0 1px #2196F3;\n\n\n\n// } \n// ${CheckBox}:checked & {\n//     -webkit-transform: translateX(26px);\n//     -ms-transform: translateX(26px);\n//     transform: translateX(26px);\n// }\n\n\n\nconst SliderRound = styled.span`\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        // background-color: #ccc;\n        -webkit-transition: 9s;\n        transition: .9s;\n        border-radius: 24px;\n        \n        &:before {\n            border-radius: 50%;\n            position: absolute;\n            content: \"\";\n            height: 30px;\n            width: 30px;\n            left: 1px;\n            bottom: -3px;\n            // background-color: white;\n            background-color: ${props => props.fColor};\n            -webkit-transition: .9s;\n            transition: .9s;\n\n            ${props => props.checked && ({\n                background: 'darkred',\n                border: '1px solid limegreen',\n                borderRadius: '25px'\n             })\n        }\n        background-color: ${props => props.bColor};\n`;\n\nconst Slider = () => {\n\n    const [isChecked, setIsChecked] = useState(true);\n\n    return (\n        <div>\n            <SliderWrapper>\n                <SliderRound bColor={isChecked ? '#6da4ed' : '#ccc'} fColor={isChecked ? '#1a73e8' : 'white'} \n                onMouseDown={() => { setIsChecked(!isChecked) }} />\n            </SliderWrapper>\n\n            <input type=\"checkbox\" onChange={() => console.log('ooooo', isChecked)} />\n        </div>\n\n\n\n\n    );\n\n}\n\n\n\n\nexport { Slider };"]},"metadata":{},"sourceType":"module"}