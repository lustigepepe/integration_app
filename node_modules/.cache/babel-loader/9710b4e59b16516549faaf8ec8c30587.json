{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { SimpleFlexWrapper, WrapAreas } from '../styles/FlexWrapper';\nimport { Button, ButtonElement } from '../styles/Buttons'; // Minus button - -\n\nconst ComponentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n\n    @media(max-width: 862px) {\n        margin-left: 280px;\n        display: block\n    }\n`;\nconst InputWrapper = styled.div`\n`;\nconst ResetButton = styled(ButtonElement)`\n    background-color: #dc3545;\n    padding: 2px 8px ;\n    margin-left: 25px;\n    border-color: #dc3545;\n`;\n\nconst WebStiteName = props => React.createElement(ComponentWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(InputWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(InputText, {\n  placeholder: \"Website Placement\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})));\n\nconst CsvGeneration = () => {\n  // const [units, setUnits] = useState([[unit, sizes, placement]]);\n  const [units, setUnits] = useState([{\n    unit: '',\n    sizes: '',\n    placement: ''\n  }]);\n  const [unit, setUnit] = useState([]);\n\n  const generate = () => {\n    console.log('bum dingsing');\n  };\n  /* eslint-disable no-debugger, no-console */\n\n\n  console.log('test');\n  useEffect(() => {\n    console.log('effects: ', units);\n  });\n\n  const AddUnits = props => React.createElement(SimpleFlexWrapper, {\n    top: \"20px\",\n    justify: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(InputText, Object.assign({\n    name: props.pos,\n    onChange: unitChanged,\n    placeholder: \"Unit\",\n    value: units[0].unit\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(InputText, Object.assign({\n    name: props.pos,\n    placeholder: \"Sizes\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(InputText, Object.assign({\n    name: props.pos,\n    placeholder: \"Placement\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(ResetButton, {\n    name: props.pos,\n    onClick: removeUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Delete  \"));\n\n  const removeUnit = event => {\n    const _units = [];\n\n    for (var unitTemp in units) {\n      if (unitTemp === event.target.name) {\n        continue;\n      } else {\n        _units.push(units[unitTemp]);\n      }\n    }\n\n    setUnits(_units);\n  };\n\n  const addUnit = event => {\n    var _units = [...units];\n\n    _units.push({\n      unit: '',\n      sizes: '',\n      placement: ''\n    });\n\n    setUnits(_units);\n  };\n\n  const unitChanged = event => {\n    var _unit = units[event.target.name];\n\n    switch (event.target.placeholder) {\n      case 'Unit':\n        _unit.unit = event.target.value;\n        break;\n\n      case 'Sizes':\n        _unit.sizes = event.target.value;\n        break;\n\n      case 'Placement':\n        _unit.placement = event.target.value;\n    }\n\n    units[event.target.name] = _unit;\n    setUnits([...units]);\n  };\n\n  return React.createElement(SimpleFlexWrapper, {\n    top: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(WrapAreas, {\n    adjust: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(WebStiteName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), units.map((ele, index) => React.createElement(SimpleFlexWrapper\n  /* key={ele.unit + index}  */\n  , {\n    top: \"20px\",\n    justify: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(InputText\n  /* key={ele.sizes + 'sizes'} */\n  , {\n    name: index,\n    placeholder: \"Sizes\",\n    onChange: unitChanged,\n    value: ele.sizes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(InputText\n  /*  key={ele.placement + 'placement'} */\n  , {\n    name: index,\n    placeholder: \"Placement\",\n    onChange: unitChanged,\n    value: ele.placement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(ResetButton\n  /* key={ele.unit + ele.sizes + 'delete'}  */\n  , {\n    name: index,\n    onClick: removeUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Delete  \"), React.createElement(InputText\n  /* key={ele.unit + index + 'unit'}  */\n  , {\n    name: index,\n    placeholder: \"Unit\",\n    onChange: unitChanged,\n    value: ele.unit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))), React.createElement(AddButton, {\n    justify: 'center',\n    top: '50px',\n    onClick: addUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Generate\",\n    onClick: generate,\n    top: \"80px\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })));\n};\n\nexport { CsvGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js"],"names":["React","useState","useEffect","styled","AddButton","InputText","SimpleFlexWrapper","WrapAreas","Button","ButtonElement","ComponentWrapper","div","InputWrapper","ResetButton","WebStiteName","props","CsvGeneration","units","setUnits","unit","sizes","placement","setUnit","generate","console","log","AddUnits","pos","unitChanged","removeUnit","event","_units","unitTemp","target","name","push","addUnit","_unit","placeholder","value","map","ele","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { SimpleFlexWrapper, WrapAreas } from '../styles/FlexWrapper';\nimport { Button, ButtonElement } from '../styles/Buttons';\n\n\n// Minus button - -\nconst ComponentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n\n    @media(max-width: 862px) {\n        margin-left: 280px;\n        display: block\n    }\n`;\n\nconst InputWrapper = styled.div`\n`;\n\nconst ResetButton = styled(ButtonElement)`\n    background-color: #dc3545;\n    padding: 2px 8px ;\n    margin-left: 25px;\n    border-color: #dc3545;\n`;\nconst WebStiteName = (props) => (\n    <ComponentWrapper>\n        <InputWrapper >\n            <InputText placeholder=\"Website Placement\" />\n        </InputWrapper>\n    </ComponentWrapper>\n);\n\nconst CsvGeneration = () => {\n\n    // const [units, setUnits] = useState([[unit, sizes, placement]]);\n    const [units, setUnits] = useState([{ unit: '', sizes: '', placement: '' }]);\n    const [unit, setUnit] = useState([]);\n    const generate = () => {\n        console.log('bum dingsing');\n    }\n\n    /* eslint-disable no-debugger, no-console */\n    console.log('test')\n\n    useEffect(() => {\n        console.log('effects: ', units);\n    });\n\n    const AddUnits = (props) => (\n        <SimpleFlexWrapper top=\"20px\" justify=\"space-between\">\n            <InputText name={props.pos} onChange={unitChanged} placeholder=\"Unit\" value={units[0].unit} {...props} />\n            <InputText name={props.pos} placeholder=\"Sizes\" {...props} />\n            <InputText name={props.pos} placeholder=\"Placement\"   {...props} />\n            <ResetButton name={props.pos} onClick={removeUnit} >Delete  </ResetButton>\n        </SimpleFlexWrapper>\n    );\n\n    const removeUnit = (event) => {\n        const _units = [];\n        for (var unitTemp in units) {\n            if (unitTemp === event.target.name) {\n                continue;\n            } else {\n                _units.push(units[unitTemp]);\n            }\n        }\n        setUnits(_units);\n    }\n\n    const addUnit = (event) => {\n        var _units = [...units];\n        _units.push({ unit: '', sizes: '', placement: '' });\n        setUnits(_units);\n    }\n\n    const unitChanged = (event) => {\n\n        var _unit = units[event.target.name];\n        switch (event.target.placeholder) {\n            case 'Unit':\n                _unit.unit = event.target.value;\n                break;\n            case 'Sizes':\n                _unit.sizes = event.target.value;\n                break;\n            case 'Placement':\n                _unit.placement = event.target.value;\n        }\n        units[event.target.name] = _unit\n        setUnits([...units]);\n    }\n    return (\n        <SimpleFlexWrapper top=\"30px\">\n            <WrapAreas adjust=\"true\">\n                <WebStiteName />\n                {units.map((ele, index) => (\n                    <SimpleFlexWrapper /* key={ele.unit + index}  */ top=\"20px\" justify=\"space-between\">\n                        <InputText /* key={ele.sizes + 'sizes'} */ name={index} placeholder=\"Sizes\" onChange={unitChanged} value={ele.sizes} />\n                        <InputText /*  key={ele.placement + 'placement'} */ name={index} placeholder=\"Placement\" onChange={unitChanged} value={ele.placement} />\n                        <ResetButton /* key={ele.unit + ele.sizes + 'delete'}  */ name={index} onClick={removeUnit} >Delete  </ResetButton>\n                        <InputText /* key={ele.unit + index + 'unit'}  */ name={index} placeholder=\"Unit\" onChange={unitChanged} value={ele.unit} />\n                    </SimpleFlexWrapper>\n                ))}\n                <AddButton justify={'center'} top={'50px'} onClick={addUnit} />\n                <Button name={\"Generate\"} onClick={generate} top=\"80px\" justify=\"center\" />\n            </WrapAreas>\n        </SimpleFlexWrapper>\n    );\n}\n\nexport { CsvGeneration };\n"]},"metadata":{},"sourceType":"module"}