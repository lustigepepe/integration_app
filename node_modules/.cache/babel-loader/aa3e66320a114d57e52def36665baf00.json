{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Label = styled.div`\n    display: 'inline-block',\n    font-size: 20px;\n    font-weight: 500\n    letter-spacing: .25px;\n    padding-bottom: 5.5px\n\n `;\nconst SliderWrapper = styled.label`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n    margin-left : 4px;\n`;\nconst Checkbox = styled.input`\n    opacity: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\nconst SliderRound = styled.span`\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    // background-color: #ccc;\n    -webkit-transition: .6s;\n    transition: .6s;\n    border-radius: 24px;\n    background-color: ${props => props.bColor};\n    \n    &:before {\n        border-radius: 50%;\n        position: absolute;\n        content: \"\";\n        height: 30px;\n        width: 30px;\n        left: 1px;\n        bottom: -3px;\n        // background-color: white;\n        background-color: F8F8FF;\n        background-color: ${props => props.fColor};\n        -webkit-transition: .6s;\n        transition: .6s;\n\n        ${props => props.checked && {\n  '-webkit-transform': 'translateX(27px)',\n  '-ms-transform': 'translateX(27px)',\n  transform: 'translateX(27px)'\n}}\n    }\n`;\n\nconst Slider = props => {\n  const [isChecked, setIsChecked] = useState(true);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.name, \":\", React.createElement(SliderWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(SliderRound, {\n    bColor: isChecked ? '#6da4ed' : '#ccc',\n    fColor: isChecked ? '#1a73e8' : '#F8F8FF',\n    checked: isChecked ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Checkbox, {\n    type: \"checkbox\",\n    onChange: () => {\n      console.log('ssss');\n      setIsChecked(!isChecked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))));\n};\n\nexport { Slider };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js"],"names":["React","useState","styled","Label","div","SliderWrapper","label","Checkbox","input","SliderRound","span","props","bColor","fColor","checked","transform","Slider","isChecked","setIsChecked","name","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAKA,MAAMC,KAAK,GAAGD,MAAM,CAACE,GAAI;;;;;;;EAAzB;AAQA,MAAMC,aAAa,GAAGH,MAAM,CAACI,KAAM;;;;;;CAAnC;AAQA,MAAMC,QAAQ,GAAGL,MAAM,CAACM,KAAM;;;;;;;CAA9B;AAUA,MAAMC,WAAW,GAAGP,MAAM,CAACQ,IAAK;;;;;;;;;;;wBAWRC,KAAK,IAAIA,KAAK,CAACC,MAAO;;;;;;;;;;;;4BAYlBD,KAAK,IAAIA,KAAK,CAACE,MAAO;;;;UAIxCF,KAAK,IAAIA,KAAK,CAACG,OAAN,IAAkB;AAC7B,uBAAqB,kBADQ;AAE7B,mBAAiB,kBAFY;AAG7BC,EAAAA,SAAS,EAAE;AAHkB,CAI9B;;CA/BP;;AAmCA,MAAMC,MAAM,GAAIL,KAAD,IAAW;AAEtB,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESU,KAAK,CAACQ,IAFf,OAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEF,SAAS,GAAG,SAAH,GAAe,MAA7C;AAAqD,IAAA,MAAM,EAAEA,SAAS,GAAG,SAAH,GAAe,SAArF;AAAgG,IAAA,OAAO,EAAEA,SAAS,GAAG,IAAH,GAAU,KAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,QAAQ,EAAE,MAAM;AAAEG,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAqBH,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAA0B,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,CAFJ,CADJ;AAcH,CAjBD;;AAqBA,SAASD,MAAT","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components'\n\n\n\n\nconst Label = styled.div`\n    display: 'inline-block',\n    font-size: 20px;\n    font-weight: 500\n    letter-spacing: .25px;\n    padding-bottom: 5.5px\n\n `;\nconst SliderWrapper = styled.label`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n    margin-left : 4px;\n`;\n\nconst Checkbox = styled.input`\n    opacity: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\n\n\nconst SliderRound = styled.span`\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    // background-color: #ccc;\n    -webkit-transition: .6s;\n    transition: .6s;\n    border-radius: 24px;\n    background-color: ${props => props.bColor};\n    \n    &:before {\n        border-radius: 50%;\n        position: absolute;\n        content: \"\";\n        height: 30px;\n        width: 30px;\n        left: 1px;\n        bottom: -3px;\n        // background-color: white;\n        background-color: F8F8FF;\n        background-color: ${props => props.fColor};\n        -webkit-transition: .6s;\n        transition: .6s;\n\n        ${props => props.checked && ({\n        '-webkit-transform': 'translateX(27px)',\n        '-ms-transform': 'translateX(27px)',\n        transform: 'translateX(27px)',\n    })}\n    }\n`;\n\nconst Slider = (props) => {\n\n    const [isChecked, setIsChecked] = useState(true);\n    return (\n        <div>\n\n            <Label>\n                {/* <span>  */}\n                    {props.name}: \n                      {/* </span> */}\n                <SliderWrapper >\n                    <SliderRound bColor={isChecked ? '#6da4ed' : '#ccc'} fColor={isChecked ? '#1a73e8' : '#F8F8FF'} checked={isChecked ? true : false} />\n                    <Checkbox type=\"checkbox\" onChange={() => { console.log('ssss'); setIsChecked(!isChecked) }} />\n                </SliderWrapper>\n            </Label>\n        </div>\n    );\n}\n\n\n\nexport { Slider };"]},"metadata":{},"sourceType":"module"}