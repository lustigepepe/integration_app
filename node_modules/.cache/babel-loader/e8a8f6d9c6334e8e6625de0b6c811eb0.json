{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst SliderWrapper = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n`; // ${CheckBox}:focus & {\n//     box-shadow: 0 0 1px #2196F3;\n// } \n// ${CheckBox}:checked & {\n//     -webkit-transform: translateX(26px);\n//     -ms-transform: translateX(26px);\n//     transform: translateX(26px);\n// }\n\nconst CheckBox = styled.input`\n                opacity: 0;\n                width: 0;\n                height: 0;\n            `;\nconst SliderRound = styled.span`\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            -webkit-transition: .4s;\n            transition: .4s;\n            border-radius: 24px;\n            \n            &:before {\n\n        border-radius: 50%;\n        position: absolute;\n        content: \"\";\n        height: 30px;\n        width: 30px;\n        left: 1px;\n        bottom: -3px;\n        background-color: white;\n        -webkit-transition: .4s;\n        transition: .4s;\n    }\n\n    ${({\n  isChecked\n}) => isChecked && `\n        background-color: #1a73e8;\n    `};\n`; // const Slider = () => {\n\nclass Slider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isChecked: true\n    };\n  }\n\n  setIsChecked() {// this.setState({isChecked : !this.isChecked}); \n  }\n\n  return() {\n    render(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(SliderWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(CheckBox, {\n      type: \"checkbox\",\n      onChange: () => console.log('ooooo', this.isChecked),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(SliderRound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: () => console.log('ooooo', this.isChecked),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport { Slider };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js"],"names":["React","useState","styled","SliderWrapper","div","CheckBox","input","SliderRound","span","isChecked","Slider","Component","state","setIsChecked","return","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;;;;;CAAjC,C,CASA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAMA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,KAAM;;;;aAA9B;AAMA,MAAMC,WAAW,GAAGL,MAAM,CAACM,IAAK;;;;;;;;;;;;;;;;;;;;;;;;;;MA0B1B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmBA,SAAS,IAAK;;KAEjC;CA5BN,C,CA+BA;;AACA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAGjCC,KAHiC,GAGzB;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAHyB;AAAA;;AAIjCI,EAAAA,YAAY,GAAE,CACV;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,MAAM,CACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,UAAf;AAA0B,MAAA,QAAQ,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKR,SAA1B,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ,EASI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,MAAMO,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKR,SAA1B,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADE,CAAN;AAiBH;;AA1BgC;;AAiCrC,SAASC,MAAT","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components'\n\nconst SliderWrapper = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n`;\n\n\n\n// ${CheckBox}:focus & {\n//     box-shadow: 0 0 1px #2196F3;\n\n\n\n// } \n// ${CheckBox}:checked & {\n//     -webkit-transform: translateX(26px);\n//     -ms-transform: translateX(26px);\n//     transform: translateX(26px);\n// }\n\n\n\n\n\nconst CheckBox = styled.input`\n                opacity: 0;\n                width: 0;\n                height: 0;\n            `;\n\nconst SliderRound = styled.span`\n            position: absolute;\n            cursor: pointer;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: #ccc;\n            -webkit-transition: .4s;\n            transition: .4s;\n            border-radius: 24px;\n            \n            &:before {\n\n        border-radius: 50%;\n        position: absolute;\n        content: \"\";\n        height: 30px;\n        width: 30px;\n        left: 1px;\n        bottom: -3px;\n        background-color: white;\n        -webkit-transition: .4s;\n        transition: .4s;\n    }\n\n    ${({ isChecked }) => isChecked && `\n        background-color: #1a73e8;\n    `};\n`;\n\n// const Slider = () => {\nclass Slider extends React.Component {\n    // const [isChecked, setIsChecked] = useState(true);\n\n    state = { isChecked: true };\n    setIsChecked(){\n        // this.setState({isChecked : !this.isChecked}); \n    }\n\n    return() {\n        render(\n            <div>\n\n                <SliderWrapper>\n                    <CheckBox type=\"checkbox\" onChange={() => console.log('ooooo', this.isChecked)} />\n                    {/* <CheckBox type=\"checkbox\" onChange={() => {console.log('ooooo', isChecked );setIsChecked(!isChecked)}} /> */}\n                    <SliderRound />\n\n                </SliderWrapper>\n\n                <input type=\"checkbox\" onChange={() => console.log('ooooo', this.isChecked)} />\n            </div>\n\n\n\n\n        );\n    }\n\n}\n\n\n\n\nexport { Slider };"]},"metadata":{},"sourceType":"module"}