{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/components/ConfigGeneration.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { InputArea, OutputArea } from '../styles/Areas';\nimport { Button } from '../styles/Button';\nimport { Slider } from '../styles/templates/Slider';\nimport { PageOuterWrapper, SimpleFlexWrapper } from '../styles/PageWrapper';\nconst InputField = styled(InputArea)`\n\n    height: 30vh;\n    margin-bottom: 30px;\n    margin-top: 10px;\n`;\nconst OutputField = styled(OutputArea)`\n\n    height: 30vh;\n`;\nconst WrapAreas = styled(PageOuterWrapper)`\n    width: 60%;\n`;\n\nconst ConfigGeneration = () => {\n  // Declare a new state variable, which we'll call \"count\"\n  const [output, setOutput] = useState(\"Output\");\n  const [isChecked, setIsChecked] = useState(true);\n\n  const configResult = () => {// setOutput();\n  };\n\n  const isCheckedFunc = () => {\n    console.log('in slider imple ');\n    setIsChecked(!isChecked);\n  };\n\n  return React.createElement(SimpleFlexWrapper, {\n    top: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(WrapAreas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    name: \"ROP\",\n    distance: \"126px\",\n    checked: isChecked,\n    onChange: isCheckedFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Slider, {\n    name: \"Save to clipboard\",\n    checked: isChecked,\n    onChange: isCheckedFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    placeholder: \"Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(OutputField, {\n    style: {\n      color: output === \"Output\" ? \" grey\" : null\n    },\n    dangerouslySetInnerHTML: {\n      __html: output\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Generate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n};\n\nexport { ConfigGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/components/ConfigGeneration.js"],"names":["React","useState","useEffect","styled","InputArea","OutputArea","Button","Slider","PageOuterWrapper","SimpleFlexWrapper","InputField","OutputField","WrapAreas","ConfigGeneration","output","setOutput","isChecked","setIsChecked","configResult","isCheckedFunc","console","log","color","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,iBAAtC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,uBAApD;AAGA,MAAMC,UAAU,GAAGP,MAAM,CAACC,SAAD,CAAY;;;;;CAArC;AAOA,MAAMO,WAAW,GAAGR,MAAM,CAACE,UAAD,CAAa;;;CAAvC;AAKA,MAAMO,SAAS,GAAGT,MAAM,CAACK,gBAAD,CAAmB;;CAA3C;;AAIA,MAAMK,gBAAgB,GAAG,MAAM;AAC3B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,QAAD,CAApC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C;;AAGA,QAAMiB,YAAY,GAAG,MAAM,CAIvB;AACH,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAJ,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAHD;;AAKA,SACI,oBAAC,iBAAD;AAAoB,IAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,KAAd;AAAqB,IAAA,QAAQ,EAAE,OAA/B;AAAwC,IAAA,OAAO,EAAEA,SAAjD;AAA4D,IAAA,QAAQ,EAAEG,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,mBAAd;AAAmC,IAAA,OAAO,EAAEH,SAA5C;AAAuD,IAAA,QAAQ,EAAEG,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAGR,MAAM,KAAK,QAAZ,GAAwB,OAAxB,GAAkC;AAA3C,KAApB;AAAuE,IAAA,uBAAuB,EAAE;AAAES,MAAAA,MAAM,EAAET;AAAV,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ;AAWH,CA7BD;;AA+BA,SAASD,gBAAT","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { InputArea, OutputArea } from '../styles/Areas'\nimport { Button } from '../styles/Button'\nimport { Slider } from '../styles/templates/Slider'\nimport { PageOuterWrapper, SimpleFlexWrapper } from '../styles/PageWrapper'\n\n\nconst InputField = styled(InputArea)`\n\n    height: 30vh;\n    margin-bottom: 30px;\n    margin-top: 10px;\n`;\n\nconst OutputField = styled(OutputArea)`\n\n    height: 30vh;\n`;\n\nconst WrapAreas = styled(PageOuterWrapper)`\n    width: 60%;\n`;\n\nconst ConfigGeneration = () => {\n    // Declare a new state variable, which we'll call \"count\"\n    const [output, setOutput] = useState(\"Output\");\n    const [isChecked, setIsChecked] = useState(true);\n\n\n    const configResult = () => {\n\n\n\n        // setOutput();\n    }\n\n    const isCheckedFunc = () => {\n        console.log('in slider imple ');\n        setIsChecked(!isChecked);\n    }\n\n    return (\n        <SimpleFlexWrapper  top=\"30px\">\n            <WrapAreas>\n                <Slider name={\"ROP\"} distance={\"126px\"} checked={isChecked} onChange={isCheckedFunc} />\n                <Slider name={\"Save to clipboard\"} checked={isChecked} onChange={isCheckedFunc} />\n                <InputField placeholder=\"Input\" />\n                <OutputField style={{ color: (output === \"Output\") ? \" grey\" : null }} dangerouslySetInnerHTML={{ __html: output }}></OutputField>\n                <Button name={\"Generate\"}/>\n            </WrapAreas>\n        </SimpleFlexWrapper>\n    );\n}\n\nexport { ConfigGeneration };\n"]},"metadata":{},"sourceType":"module"}