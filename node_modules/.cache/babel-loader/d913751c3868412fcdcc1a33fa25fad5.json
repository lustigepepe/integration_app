{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nconst SliderWrapper = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n`; // ${CheckBox}:focus & {\n//     box-shadow: 0 0 1px #2196F3;\n// } \n// ${CheckBox}:checked & {\n//     -webkit-transform: translateX(26px);\n//     -ms-transform: translateX(26px);\n//     transform: translateX(26px);\n// }\n\nconst SliderRound = styled.span`\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        // background-color: #ccc;\n        -webkit-transition: .6s;\n        transition: .6s;\n        border-radius: 24px;\n        \n        &:before {\n            border-radius: 50%;\n            position: absolute;\n            content: \"\";\n            height: 30px;\n            width: 30px;\n            left: 1px;\n            bottom: -3px;\n            // background-color: white;\n            background-color: ${props => props.fColor};\n            -webkit-transition: .6s;\n            transition: .6s;\n\n            ${props => props.checked && {\n  '-webkit-transform': 'translateX(27px)',\n  '-ms-transform': 'translateX(27px)',\n  transform: 'translateX(27px)'\n}}\n        }\n        background-color: ${props => props.bColor};\n`;\n\nconst Slider = props => {\n  const [isChecked, setIsChecked] = useState(true); // useEffect(() => {\n  //     var ev = new Event('onChange', { bubbles: true });\n  //     ev.simulated = true;\n  //     const slider = document.getElementById(\"slider\");\n  //     slider.dispatchEvent(ev);\n  // }, []);\n\n  const isChangedFunc = () => {\n    setIsChecked(!isChecked);\n    var ev = new Event('sliderOn', {\n      bubbles: true\n    });\n    ev.simulated = true;\n    const slider = document.getElementById(\"slider\");\n    slider.value = isChecked;\n    slider.dispatchEvent(ev);\n    console.log('in slider imple ');\n  };\n\n  {\n    /* checked={isChecked ? true : false} onMouseDown={() => { setIsChecked(!isChecked) }} /> */\n  }\n  React.createElement(SliderRound, {\n    id: \"slider\",\n    bColor: isChecked ? '#6da4ed' : '#ccc',\n    fColor: isChecked ? '#1a73e8' : '#F8F8FF',\n    checked: isChecked ? true : false,\n    onMouseDown: isChangedFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(SliderWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(SliderRound, {\n    id: \"slider\",\n    bColor: isChecked ? '#6da4ed' : '#ccc',\n    fColor: isChecked ? '#1a73e8' : '#F8F8FF',\n    checked: isChecked ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })));\n};\n\nexport { Slider };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js"],"names":["React","useState","useEffect","styled","SliderWrapper","div","SliderRound","span","props","fColor","checked","transform","bColor","Slider","isChecked","setIsChecked","isChangedFunc","ev","Event","bubbles","simulated","slider","document","getElementById","value","dispatchEvent","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;;;;;CAAjC,C,CASA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,WAAW,GAAGH,MAAM,CAACI,IAAK;;;;;;;;;;;;;;;;;;;;;gCAqBAC,KAAK,IAAIA,KAAK,CAACC,MAAO;;;;cAIxCD,KAAK,IAAIA,KAAK,CAACE,OAAN,IAAkB;AACjC,uBAAqB,kBADY;AAEjC,mBAAiB,kBAFgB;AAGjCC,EAAAA,SAAS,EAAE;AAHsB,CAIlC;;4BAEqBH,KAAK,IAAIA,KAAK,CAACI,MAAO;CA/BlD;;AAkCA,MAAMC,MAAM,GAAIL,KAAD,IAAW;AAEtB,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C,CAFsB,CAMtB;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMe,aAAa,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACA,QAAIG,EAAE,GAAG,IAAIC,KAAJ,CAAU,UAAV,EAAsB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAtB,CAAT;AACAF,IAAAA,EAAE,CAACG,SAAH,GAAe,IAAf;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACAF,IAAAA,MAAM,CAACG,KAAP,GAAeV,SAAf;AACAO,IAAAA,MAAM,CAACI,aAAP,CAAqBR,EAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GARD;;AAUA;AAAC;AAA8F;AAC/F,sBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,QAAhB;AAAyB,IAAA,MAAM,EAAEb,SAAS,GAAG,SAAH,GAAe,MAAzD;AAAiE,IAAA,MAAM,EAAEA,SAAS,GAAG,SAAH,GAAe,SAAjG;AACA,IAAA,OAAO,EAAEA,SAAS,GAAG,IAAH,GAAU,KAD5B;AACmC,IAAA,WAAW,EAAEE,aADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,QAAhB;AAAyB,IAAA,MAAM,EAAEF,SAAS,GAAG,SAAH,GAAe,MAAzD;AAAiE,IAAA,MAAM,EAAEA,SAAS,GAAG,SAAH,GAAe,SAAjG;AACI,IAAA,OAAO,EAAEA,SAAS,GAAG,IAAH,GAAU,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAeH,CAxCD;;AA4CA,SAASD,MAAT","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\n\nconst SliderWrapper = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n`;\n\n\n\n// ${CheckBox}:focus & {\n//     box-shadow: 0 0 1px #2196F3;\n\n\n\n// } \n// ${CheckBox}:checked & {\n//     -webkit-transform: translateX(26px);\n//     -ms-transform: translateX(26px);\n//     transform: translateX(26px);\n// }\n\n\n\nconst SliderRound = styled.span`\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        // background-color: #ccc;\n        -webkit-transition: .6s;\n        transition: .6s;\n        border-radius: 24px;\n        \n        &:before {\n            border-radius: 50%;\n            position: absolute;\n            content: \"\";\n            height: 30px;\n            width: 30px;\n            left: 1px;\n            bottom: -3px;\n            // background-color: white;\n            background-color: ${props => props.fColor};\n            -webkit-transition: .6s;\n            transition: .6s;\n\n            ${props => props.checked && ({\n        '-webkit-transform': 'translateX(27px)',\n        '-ms-transform': 'translateX(27px)',\n        transform: 'translateX(27px)',\n    })}\n        }\n        background-color: ${props => props.bColor};\n`;\n\nconst Slider = (props) => {\n\n    const [isChecked, setIsChecked] = useState(true);\n\n\n\n    // useEffect(() => {\n    //     var ev = new Event('onChange', { bubbles: true });\n    //     ev.simulated = true;\n    //     const slider = document.getElementById(\"slider\");\n    //     slider.dispatchEvent(ev);\n    // }, []);\n    const isChangedFunc = () => {\n        setIsChecked(!isChecked);\n        var ev = new Event('sliderOn', { bubbles: true });\n        ev.simulated = true;\n        const slider = document.getElementById(\"slider\");\n        slider.value = isChecked;\n        slider.dispatchEvent(ev);\n        console.log('in slider imple ');\n    }\n\n    {/* checked={isChecked ? true : false} onMouseDown={() => { setIsChecked(!isChecked) }} /> */ }\n    <SliderRound id='slider' bColor={isChecked ? '#6da4ed' : '#ccc'} fColor={isChecked ? '#1a73e8' : '#F8F8FF'}\n    checked={isChecked ? true : false} onMouseDown={isChangedFunc} />\n    return (\n        <div>\n            <SliderWrapper >\n            <input type=\"checkbox\" checked/>\n                <SliderRound id='slider' bColor={isChecked ? '#6da4ed' : '#ccc'} fColor={isChecked ? '#1a73e8' : '#F8F8FF'}\n                    checked={isChecked ? true : false} />\n            </SliderWrapper>\n\n        </div>\n\n\n\n\n    );\n\n}\n\n\n\nexport { Slider };"]},"metadata":{},"sourceType":"module"}