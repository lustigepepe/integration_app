{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/components/ConfigGeneration.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { InputArea, OutputArea } from '../styles/Areas';\nimport { Slider, Checkboxx } from '../styles/templates/Slider';\nimport { PageOuterWrapper, SimpleFlexPageWraper } from '../styles/PageWrapper';\nconst InputField = styled(InputArea)`\n\n    height: 30vh;\n    margin-bottom: 20px;\n`;\nconst OutputField = styled(OutputArea)`\n\n    height: 30vh;\n`;\nconst WrapAreas = styled(PageOuterWrapper)`\n    width: 60%;\n`;\nconst Input = styled.input`\n\n`;\n\nconst ConfigGeneration = () => {\n  // Declare a new state variable, which we'll call \"count\"\n  const [output, setOutput] = useState(\"Output\");\n  const [isChecked, setIsChecked] = useState(true);\n\n  const configResult = () => {// setOutput();\n  };\n\n  const isCheckedFunc = () => {\n    setIsChecked(!isChecked);\n    var ev = new Event('change', {\n      bubbles: true\n    });\n    ev.simulated = true;\n    const slider = document.getElementById(\"slider\"); // slider.value = isChecked;\n\n    slider.dispatchEvent(ev);\n    console.log('in slider imple ');\n  };\n\n  return React.createElement(SimpleFlexPageWraper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(WrapAreas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Checkboxx, {\n    onChange: e => console.log('ONChanged: '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Slider, {\n    name: \"ROP\",\n    distance: \"126px\",\n    checked: isChecked,\n    onChange: e => console.log('ONChanged: '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Slider, {\n    name: \"Save to clipboard\",\n    checked: isChecked,\n    onChange: e => {\n      isCheckedFunc;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    placeholder: \"Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(OutputField, {\n    style: {\n      color: output === \"Output\" ? \" grey\" : null\n    },\n    dangerouslySetInnerHTML: {\n      __html: output\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n};\n\nexport { ConfigGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/components/ConfigGeneration.js"],"names":["React","useState","useEffect","styled","InputArea","OutputArea","Slider","Checkboxx","PageOuterWrapper","SimpleFlexPageWraper","InputField","OutputField","WrapAreas","Input","input","ConfigGeneration","output","setOutput","isChecked","setIsChecked","configResult","isCheckedFunc","ev","Event","bubbles","simulated","slider","document","getElementById","dispatchEvent","console","log","e","color","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,iBAAtC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,4BAAlC;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,uBAAvD;AAGA,MAAMC,UAAU,GAAGP,MAAM,CAACC,SAAD,CAAY;;;;CAArC;AAMA,MAAMO,WAAW,GAAGR,MAAM,CAACE,UAAD,CAAa;;;CAAvC;AAKA,MAAMO,SAAS,GAAGT,MAAM,CAACK,gBAAD,CAAmB;;CAA3C;AAMA,MAAMK,KAAK,GAAGV,MAAM,CAACW,KAAM;;CAA3B;;AAMA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,QAAD,CAApC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,IAAD,CAA1C;;AAGA,QAAMmB,YAAY,GAAG,MAAM,CAIvB;AACH,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AACxBF,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACA,QAAII,EAAE,GAAG,IAAIC,KAAJ,CAAU,QAAV,EAAoB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAApB,CAAT;AACAF,IAAAA,EAAE,CAACG,SAAH,GAAe,IAAf;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf,CAJwB,CAKxB;;AACAF,IAAAA,MAAM,CAACG,aAAP,CAAqBP,EAArB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GARD;;AAUA,SACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAGC,CAAD,IAAOF,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,KAAd;AAAqB,IAAA,QAAQ,EAAE,OAA/B;AAAwC,IAAA,OAAO,EAAEb,SAAjD;AAA4D,IAAA,QAAQ,EAAGc,CAAD,IAAOF,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,mBAAd;AAAmC,IAAA,OAAO,EAAEb,SAA5C;AAAuD,IAAA,QAAQ,EAAGc,CAAD,IAAO;AAACX,MAAAA,aAAa;AAAE,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAGjB,MAAM,KAAK,QAAZ,GAAwB,OAAxB,GAAkC;AAA3C,KAApB;AAAuE,IAAA,uBAAuB,EAAE;AAAEkB,MAAAA,MAAM,EAAElB;AAAV,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ;AAWH,CAlCD;;AAoCA,SAASD,gBAAT","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { InputArea, OutputArea } from '../styles/Areas'\nimport { Slider, Checkboxx } from '../styles/templates/Slider'\nimport { PageOuterWrapper, SimpleFlexPageWraper } from '../styles/PageWrapper'\n\n\nconst InputField = styled(InputArea)`\n\n    height: 30vh;\n    margin-bottom: 20px;\n`;\n\nconst OutputField = styled(OutputArea)`\n\n    height: 30vh;\n`;\n\nconst WrapAreas = styled(PageOuterWrapper)`\n    width: 60%;\n`;\n\n\n\nconst Input = styled.input`\n\n`;\n\n\n\nconst ConfigGeneration = () => {\n    // Declare a new state variable, which we'll call \"count\"\n    const [output, setOutput] = useState(\"Output\");\n    const [isChecked, setIsChecked] = useState(true);\n\n\n    const configResult = () => {\n\n\n\n        // setOutput();\n    }\n\n    const isCheckedFunc = () => {\n        setIsChecked(!isChecked);\n        var ev = new Event('change', { bubbles: true });\n        ev.simulated = true;\n        const slider = document.getElementById(\"slider\");\n        // slider.value = isChecked;\n        slider.dispatchEvent(ev);\n        console.log('in slider imple ');\n    }\n\n    return (\n        <SimpleFlexPageWraper>\n            <WrapAreas>\n                <Checkboxx onChange={(e) => console.log('ONChanged: ')} />\n                <Slider name={\"ROP\"} distance={\"126px\"} checked={isChecked} onChange={(e) => console.log('ONChanged: ')} />\n                <Slider name={\"Save to clipboard\"} checked={isChecked} onChange={(e) => {isCheckedFunc }} />\n                <InputField placeholder=\"Input\" />\n                <OutputField style={{ color: (output === \"Output\") ? \" grey\" : null }} dangerouslySetInnerHTML={{ __html: output }}></OutputField>\n            </WrapAreas>\n        </SimpleFlexPageWraper>\n    );\n}\n\nexport { ConfigGeneration };\n"]},"metadata":{},"sourceType":"module"}