{"ast":null,"code":"import { bidder } from './Helper'; //ROP\n\nconst rop = {\n  \"120x600\": \"2146125\",\n  \"160x600\": \"2146128\",\n  \"200x600\": \"2146127\",\n  \"300x100\": \"3562558\",\n  \"300x250\": \"2146130\",\n  \"300x250\": \"3562949\",\n  \"300x50\": \"3562561\",\n  \"300x600\": \"2146129\",\n  \"320x100\": \"3561911\",\n  \"320x480\": \"3562349\",\n  \"320x50\": \"3562953\",\n  \"728x90\": \"3889479\",\n  \"800x250\": \"3889481\",\n  \"970x250\": \"2146124\",\n  \"970x90\": \"2146126\"\n}; //news\n\nconst orNot = {\n  \"120x600\": \"2227039\",\n  \"160x600\": \"2227040\",\n  \"200x600\": \"2227038\",\n  \"300x100\": \"3562555\",\n  \"300x250\": \"2146133\",\n  \"300x250\": \"3889480\",\n  \"300x50\": \"3563072\",\n  \"300x600\": \"3889482\",\n  \"320x100\": \"2146134\",\n  \"320x480\": \"3562552\",\n  \"320x50\": \"3561904\",\n  \"728x90\": \"2227036\",\n  \"800x250\": \"2227037\",\n  \"970x250\": \"2227035\",\n  \"970x90\": \"2455011\"\n}; //criteo\n\nvar sizesInConfig = [{\n  size: '300x250',\n  pl: 'medrect1'\n}, {\n  size: '300x250',\n  pl: 'medrect2'\n}, {\n  size: '728x90',\n  pl: 'leader'\n}, {\n  size: '320x100',\n  pl: 'leader'\n}]; //hier slot Definitionen rein:\n\nvar slots = [{\n  unit: \"leaderboard\",\n  initiallyExpanded: true,\n  size: [[728, 90], [300, 50], [300, 100], [320, 50], [320, 100]],\n  sizeMapping: [[[0, 0], [[300, 50], [300, 100], [320, 50], [320, 100]]], [[601, 0], [[1, 1], [728, 90]]]],\n  targeting: {\n    pos: \"ATF\"\n  }\n}, {\n  unit: \"medrect1\",\n  initiallyExpanded: true,\n  size: [[300, 250], 'fluid'],\n  sizeMapping: [[[0, 0], [[300, 50], [300, 250], [300, 100], [320, 50], [320, 100], 'fluid']], [[601, 0], [[1, 1], [300, 250]]]]\n}, {\n  unit: \"medrect2\",\n  initiallyExpanded: true,\n  size: [[300, 250], 'fluid']\n}, {\n  unit: \"post-site-ad\",\n  size: \"out-of-page\"\n}, {\n  unit: \"medrect1-mobile\",\n  initiallyExpanded: true,\n  size: [[300, 250]],\n  sizeMapping: [[[0, 0], [[300, 250]]], [[768, 0], []]]\n}];\n\nfunction containsObject(obj, list) {\n  var i;\n\n  for (i = 0; i < list.length; i++) {\n    if (list[i] === obj) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nconst generateParamAttributes = (params, bidderName, pageName) => {\n  params.placementnameing = '';\n  params.addStringtocall = [];\n\n  switch (bidderName) {\n    case bidder.CRITEO:\n      params.addStringtocall.push(['networkId', 3724], ['publisherSubId', pageName]);\n      break;\n\n    case bidder.YIELDLAB:\n      params.placementnameing = 'adslotId';\n      params.addStringtocall.push(['supplyId', 2117490], ['extId', pageName]);\n      break;\n  }\n};\n\nconst createBidderConfigOb = (bidderName, sizes, pageName) => {\n  var bidderConfObject = {};\n  var params = {};\n  params.sizes = sizes;\n  generateParamAttributes(params, bidderName);\n  bidderConfObject.bidder = bidderName;\n  bidderConfObject.params = params;\n  return bidderConfObject;\n};\n\nconst criteoTrans = (config, pageName) => {\n  config.forEach(el => {\n    delete el.id;\n  });\n  return createBidderConfigOb(bidder.CRITEO, config, pageName);\n};\n\nconst yieldlabTrans = (input, yieldlabIds) => {\n  const {\n    config,\n    slots,\n    pageName\n  } = input;\n  var sizes,\n      bidderConfigYL = [];\n  config.forEach(function (item) {\n    //console.log(\"checking \" + item.pl)\n    slots.forEach(function (elem) {\n      var abort = false;\n\n      if (elem.unit.indexOf(item.pl) > -1) {\n        //console.log(\"check for elem successful. checking sizes\")\n        //console.log(elem)\n        //check for sizeMappings\n        if (elem.sizeMapping) {\n          for (var i = 0; i < elem.sizeMapping.length && !abort; i++) {\n            //console.log(\"checking row \"+ (i+1)+\" of \"+elem.sizeMapping.length)\n            var row = elem.sizeMapping[i][1]; //eigene Funktion machen, wird sowohl bei SizeMapping ohne benutzt\n\n            for (var k = 0; k < row.length && !abort; k++) {\n              var currSize = row[k][0].toString() + \"x\" + row[k][1].toString();\n\n              if (currSize == item.size) {\n                //console.log(\"configSize in row. pushing to variable and abort loop\");\n                var abort = true;\n                var rowArr = [];\n                row.forEach(function (rowSize) {\n                  rowArr.push(rowSize[0].toString() + \"x\" + rowSize[1].toString());\n                });\n\n                for (z = 0; z < rowArr.length; z++) {\n                  if (yieldlabIds[rowArr[z]]) {\n                    var newObj = {};\n                    newObj.size = item.size;\n                    newObj.pl = item.pl;\n                    newObj.id = yieldlabIds[rowArr[z]];\n                    newObj.bidderSize = rowArr[z]; //braucht rework\n\n                    if (!containsObject(newObj, sizes)) {\n                      sizes.push(newObj);\n                    } //console.log(\"pushing obj\");\n\n                  }\n                }\n              }\n            }\n          }\n        } //no sizeMapping\n        else if (!elem.sizeMapping && elem.size && Array.isArray(elem.size)) {\n            var row = elem.size; //eigene Funktion machen, wird sowohl bei SizeMapping ohne benutzt\n\n            for (var k = 0; k < row.length; k++) {\n              var currSize = row[k][0].toString() + \"x\" + row[k][1].toString();\n\n              if (currSize == item.size) {\n                //console.log(\"config in row. pushing to variable\");\n                if (sizes.length == 0) {\n                  sizes.push(item);\n                } else if (!sizes.includes(item)) {\n                  sizes.push(item);\n                }\n\n                if (sizes.includes(item)) {\n                  // match YL sizes\n                  for (var z = 0; z < row.length; z++) {\n                    var ylcheckSize = row[z][0].toString() + \"x\" + row[z][1].toString();\n\n                    if (yieldlabIds[ylcheckSize]) {\n                      if (typeof item.id == \"undefined\") {\n                        item.id = yieldlabIds[ylcheckSize];\n                        item.bidderSize = ylcheckSize;\n                      } //falls bereits geschrieben, erstelle neues Objekt.\n                      else {\n                          var newObj = {};\n                          newObj.size = item.size;\n                          newObj.pl = item.pl;\n                          newObj.id = yieldlabIds[ylcheckSize];\n                          newObj.bidderSize = ylcheckSize;\n                          console.log('second: ', yieldlabIds[rowArr[z]]);\n                          sizes.push(newObj);\n                        }\n                    }\n                  }\n                }\n              }\n            }\n          }\n      }\n    });\n  });\n  return createBidderConfigOb(bidder.YIELDLAB, sizes, pageName);\n};\n\nconst translate = (input, sspName, ropOrNot) => {\n  var bidderConfigYL = [];\n  const yieldlabIds = ropOrNot ? rop : orNot;\n\n  switch (sspName) {\n    case bidder.ALL:\n      bidderConfigYL.push(criteoTrans([...input.config], input.pageName));\n      bidderConfigYL.push(yieldlabTrans(input, yieldlabIds));\n      break;\n\n    case bidder.YIELDLAB:\n      bidderConfigYL.push(yieldlabTrans(input, yieldlabIds));\n      break;\n\n    case bidder.CRITEO:\n      bidderConfigYL.push(criteoTrans([...input.config]));\n      break;\n  }\n\n  return bidderConfigYL;\n};\n\nfunction getUnique(arr, comp) {\n  const unique = arr.map(e => e[comp]) // store the keys of the unique objects\n  .map((e, i, final) => final.indexOf(e) === i && i) // eliminate the dead keys & store unique objects\n  .filter(e => arr[e]).map(e => arr[e]);\n  return unique;\n}\n\nconst configReducer = (input, sspName, ropOrNot) => {\n  let bidderConfigYL = translate(input, sspName, ropOrNot);\n  var preConfig = bidderConfigYL.reduce(function (accumulator, current) {\n    if (checkIfAlreadyExist(current)) {\n      return accumulator;\n    } else {\n      return accumulator.concat([current]);\n    }\n\n    function checkIfAlreadyExist(currentVal) {\n      return accumulator.some(function (item) {\n        return item.size === currentVal.size && item.id === currentVal.id && item.pl === currentVal.pl && item.bidderSize === currentVal.bidderSize;\n      });\n    }\n  }, []);\n  return bidderConfigYL;\n};\n\nconst configGeneration = (input = {\n  config: [],\n  slots: []\n}, sspName = \"criteo\", ropOrNot = true) => {\n  let preConfig = configReducer(input, sspName, ropOrNot);\n  var beforeReplace = JSON.stringify(preConfig);\n  return beforeReplace;\n};\n\nexport { configGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/services/CGenerationService.js"],"names":["bidder","rop","orNot","sizesInConfig","size","pl","slots","unit","initiallyExpanded","sizeMapping","targeting","pos","containsObject","obj","list","i","length","generateParamAttributes","params","bidderName","pageName","placementnameing","addStringtocall","CRITEO","push","YIELDLAB","createBidderConfigOb","sizes","bidderConfObject","criteoTrans","config","forEach","el","id","yieldlabTrans","input","yieldlabIds","bidderConfigYL","item","elem","abort","indexOf","row","k","currSize","toString","rowArr","rowSize","z","newObj","bidderSize","Array","isArray","includes","ylcheckSize","console","log","translate","sspName","ropOrNot","ALL","getUnique","arr","comp","unique","map","e","final","filter","configReducer","preConfig","reduce","accumulator","current","checkIfAlreadyExist","concat","currentVal","some","configGeneration","beforeReplace","JSON","stringify"],"mappings":"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","sourcesContent":["import { bidder } from './Helper';\n\n\n//ROP\n\nconst rop = {\n    \"120x600\": \"2146125\",\n    \"160x600\": \"2146128\",\n    \"200x600\": \"2146127\",\n    \"300x100\": \"3562558\",\n    \"300x250\": \"2146130\",\n    \"300x250\": \"3562949\",\n    \"300x50\": \"3562561\",\n    \"300x600\": \"2146129\",\n    \"320x100\": \"3561911\",\n    \"320x480\": \"3562349\",\n    \"320x50\": \"3562953\",\n    \"728x90\": \"3889479\",\n    \"800x250\": \"3889481\",\n    \"970x250\": \"2146124\",\n    \"970x90\": \"2146126\"\n}\n\n\n\n//news\nconst orNot = {\n    \"120x600\": \"2227039\",\n    \"160x600\": \"2227040\",\n    \"200x600\": \"2227038\",\n    \"300x100\": \"3562555\",\n    \"300x250\": \"2146133\",\n    \"300x250\": \"3889480\",\n    \"300x50\": \"3563072\",\n    \"300x600\": \"3889482\",\n    \"320x100\": \"2146134\",\n    \"320x480\": \"3562552\",\n    \"320x50\": \"3561904\",\n    \"728x90\": \"2227036\",\n    \"800x250\": \"2227037\",\n    \"970x250\": \"2227035\",\n    \"970x90\": \"2455011\"\n}\n\n//criteo\nvar sizesInConfig = [{\n    size: '300x250',\n    pl: 'medrect1'\n}, {\n    size: '300x250',\n    pl: 'medrect2'\n}, {\n    size: '728x90',\n    pl: 'leader'\n}, {\n    size: '320x100',\n    pl: 'leader'\n}]\n\n\n//hier slot Definitionen rein:\nvar slots = [\n    {\n        unit: \"leaderboard\",\n        initiallyExpanded: true,\n        size: [\n            [728, 90], [300, 50], [300, 100], [320, 50], [320, 100]\n        ],\n        sizeMapping: [\n            [[0, 0], [[300, 50], [300, 100], [320, 50], [320, 100]]],\n            [[601, 0], [[1, 1], [728, 90]]]\n        ],\n        targeting: {\n            pos: \"ATF\"\n        }\n    },\n    {\n        unit: \"medrect1\",\n        initiallyExpanded: true,\n        size: [\n            [300, 250], 'fluid'\n        ],\n        sizeMapping: [\n            [[0, 0], [[300, 50], [300, 250], [300, 100], [320, 50], [320, 100], 'fluid']],\n            [[601, 0], [[1, 1], [300, 250]]]\n        ]\n    },\n    {\n        unit: \"medrect2\",\n        initiallyExpanded: true,\n        size: [\n            [300, 250], 'fluid'\n        ]\n    },\n    {\n        unit: \"post-site-ad\",\n        size: \"out-of-page\"\n    },\n    {\n        unit: \"medrect1-mobile\",\n        initiallyExpanded: true,\n        size: [\n            [300, 250]\n        ],\n        sizeMapping: [\n            [[0, 0], [[300, 250]]],\n            [[768, 0], []]\n        ]\n    }\n]\n\nfunction containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i] === obj) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst generateParamAttributes = (params, bidderName, pageName) => {\n\n    params.placementnameing = '';\n    params.addStringtocall = [];\n\n    switch (bidderName) {\n\n        case bidder.CRITEO:\n            params.addStringtocall.push(['networkId', 3724], ['publisherSubId', pageName]);\n            break;\n        case bidder.YIELDLAB:\n            params.placementnameing = 'adslotId';\n            params.addStringtocall.push(['supplyId', 2117490], ['extId', pageName]);\n            break;\n    }\n}\nconst createBidderConfigOb = (bidderName, sizes, pageName) => {\n\n    var bidderConfObject = {};\n    var params = {}\n    params.sizes = sizes;\n    generateParamAttributes(params, bidderName)\n    bidderConfObject.bidder = bidderName;\n    bidderConfObject.params = params;\n\n    return bidderConfObject;\n}\n\nconst criteoTrans = (config, pageName) => {\n    config.forEach(el => {\n        delete el.id;\n    });\n\n    return createBidderConfigOb(bidder.CRITEO, config, pageName);\n}\n\nconst yieldlabTrans = (input, yieldlabIds) => {\n    const { config, slots, pageName } = input;\n    var sizes, bidderConfigYL = [];\n\n    config.forEach(function (item) {\n        //console.log(\"checking \" + item.pl)\n        slots.forEach(\n            function (elem) {\n                var abort = false;\n                if (elem.unit.indexOf(item.pl) > -1) {\n                    //console.log(\"check for elem successful. checking sizes\")\n                    //console.log(elem)\n                    //check for sizeMappings\n                    if (elem.sizeMapping) {\n\n                        for (var i = 0; i < elem.sizeMapping.length && !abort; i++) {\n                            //console.log(\"checking row \"+ (i+1)+\" of \"+elem.sizeMapping.length)\n                            var row = elem.sizeMapping[i][1];\n\n                            //eigene Funktion machen, wird sowohl bei SizeMapping ohne benutzt\n                            for (var k = 0; k < row.length && !abort; k++) {\n                                var currSize = row[k][0].toString() + \"x\" + row[k][1].toString();\n                                if (currSize == item.size) {\n                                    //console.log(\"configSize in row. pushing to variable and abort loop\");\n\n                                    var abort = true;\n                                    var rowArr = []\n                                    row.forEach(function (rowSize) {\n                                        rowArr.push(rowSize[0].toString() + \"x\" + rowSize[1].toString())\n                                    })\n\n                                    for (z = 0; z < rowArr.length; z++) {\n                                        if (yieldlabIds[rowArr[z]]) {\n                                            var newObj = {}\n                                            newObj.size = item.size;\n                                            newObj.pl = item.pl;\n                                            newObj.id = yieldlabIds[rowArr[z]]\n                                            newObj.bidderSize = rowArr[z]\n\n                                            //braucht rework\n                                            if (!containsObject(newObj, sizes)) {\n                                                sizes.push(newObj);\n                                            }\n\n                                            //console.log(\"pushing obj\");\n\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    //no sizeMapping\n                    else if (!elem.sizeMapping && elem.size && Array.isArray(elem.size)) {\n                        var row = elem.size;\n                        //eigene Funktion machen, wird sowohl bei SizeMapping ohne benutzt\n                        for (var k = 0; k < row.length; k++) {\n                            var currSize = row[k][0].toString() + \"x\" + row[k][1].toString();\n                            if (currSize == item.size) {\n                                //console.log(\"config in row. pushing to variable\");\n\n                                if (sizes.length == 0) {\n                                    sizes.push(item)\n                                }\n                                else if (!sizes.includes(item)) {\n                                    sizes.push(item)\n                                }\n\n                                if (sizes.includes(item)) {\n                                    // match YL sizes\n                                    for (var z = 0; z < row.length; z++) {\n                                        var ylcheckSize = row[z][0].toString() + \"x\" + row[z][1].toString();\n                                        if (yieldlabIds[ylcheckSize]) {\n                                            if (typeof item.id == \"undefined\") {\n                                                item.id = yieldlabIds[ylcheckSize];\n                                                item.bidderSize = ylcheckSize;\n                                            }\n                                            //falls bereits geschrieben, erstelle neues Objekt.\n                                            else {\n                                                var newObj = {}\n                                                newObj.size = item.size;\n                                                newObj.pl = item.pl;\n                                                newObj.id = yieldlabIds[ylcheckSize];\n                                                newObj.bidderSize = ylcheckSize;\n                                                console.log('second: ', yieldlabIds[rowArr[z]])\n\n                                                sizes.push(newObj);\n                                            }\n\n                                        }\n                                    }\n                                }\n\n                            }\n                        }\n\n                    }\n\n                }\n            })\n    })\n    return createBidderConfigOb(bidder.YIELDLAB, sizes, pageName);\n}\n\n\n\nconst translate = (input, sspName, ropOrNot) => {\n    var bidderConfigYL = [];\n    const yieldlabIds = ropOrNot ? rop : orNot;\n    switch (sspName) {\n        case bidder.ALL:\n            bidderConfigYL.push(criteoTrans([...input.config], input.pageName));\n            bidderConfigYL.push(yieldlabTrans(input, yieldlabIds));\n            break;\n        case bidder.YIELDLAB:\n            bidderConfigYL.push(yieldlabTrans(input, yieldlabIds));\n            break;\n        case bidder.CRITEO:\n            bidderConfigYL.push(criteoTrans([...input.config]));\n            break;\n    }\n\n    return bidderConfigYL;\n}\n\n\nfunction getUnique(arr, comp) {\n\n    const unique = arr\n        .map(e => e[comp])\n\n        // store the keys of the unique objects\n        .map((e, i, final) => final.indexOf(e) === i && i)\n\n        // eliminate the dead keys & store unique objects\n        .filter(e => arr[e]).map(e => arr[e]);\n\n    return unique;\n}\n\nconst configReducer = (input, sspName, ropOrNot) => {\n\n    let bidderConfigYL = translate(input, sspName, ropOrNot);\n    var preConfig = bidderConfigYL.reduce(function (accumulator, current) {\n        if (checkIfAlreadyExist(current)) {\n            return accumulator\n        } else {\n            return accumulator.concat([current]);\n        }\n        function checkIfAlreadyExist(currentVal) {\n            return accumulator.some(function (item) {\n                return (item.size === currentVal.size &&\n                    item.id === currentVal.id &&\n                    item.pl === currentVal.pl &&\n                    item.bidderSize === currentVal.bidderSize\n                );\n            });\n        }\n    }, []);\n\n    return bidderConfigYL;\n}\n\n\nconst configGeneration = (input = { config: [], slots: [] }, sspName = \"criteo\", ropOrNot = true) => {\n    let preConfig = configReducer(input, sspName, ropOrNot);\n    var beforeReplace = JSON.stringify(preConfig);\n\n    return beforeReplace;\n}\n\n\nexport { configGeneration }"]},"metadata":{},"sourceType":"module"}