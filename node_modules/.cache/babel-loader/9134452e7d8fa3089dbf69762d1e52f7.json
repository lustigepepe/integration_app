{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { ColumnFlexWrapper, SimpleFlexWrapper, WrapAreas } from '../styles/FlexWrapper';\nimport { Label } from '../styles/LabelAndFont';\nimport { Button } from '../styles/Buttons';\nimport { testNameToKey } from 'jest-snapshot/build/utils'; // const Card = styled.div`\n//   ${rounded}\n//   ${column}\n// `\n\nconst ComponentWrapper = styled.div`\n\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n\n    @media(max-width: 862px) {\n        margin-left: 280px;\n        display: block\n    }\n`;\nconst InputWrapper = styled.div`\n`;\n\nconst WebStiteName = props => React.createElement(ComponentWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(InputWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(InputText, {\n  placeholder: \"Website Name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n})));\n\nconst AddUnits = props => React.createElement(SimpleFlexWrapper, {\n  top: \"20px\",\n  justify: \"space-between\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(InputText, Object.assign({\n  name: props.unit,\n  placeholder: \"unit\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n})), React.createElement(InputText, Object.assign({\n  name: props.unit,\n  placeholder: \"sizes\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})), React.createElement(InputText, Object.assign({\n  name: props.unit,\n  placeholder: \"placement\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})));\n\nconst CsvGeneration = () => {\n  // Declare a new state variable, which we'll call \"count\"\n  const [units, setUnits] = useState([{\n    unit: '',\n    sizes: '',\n    placement: ''\n  }]);\n  const [currentUnit, setCurrentUnit] = useState({\n    unit: '',\n    sizes: '',\n    placement: ''\n  });\n  const [test, setTest] = useState(['o']);\n  useEffect(() => {\n    console.log('useEffect: ', test);\n  }, []);\n\n  const generate = () => {\n    console.log('bum dingsing');\n  };\n\n  const addUnits = event => {\n    var l = test; // l.unshift('ll');\n\n    var o = ['รถ'];\n    l.push('p');\n    setTest(l);\n\n    if (currentUnit.unit) {\n      console.log('jjjjj:: ', currentUnit.unit);\n      var _units = units;\n\n      _units.unshift(currentUnit);\n\n      setUnits(_units);\n    }\n\n    console.log('in add Units: ', test);\n  };\n\n  const unitChanged = event => {\n    var unit;\n    var position;\n\n    if (event.target.name === '') {\n      unit = currentUnit;\n    } else {\n      units.forEach();\n\n      for (var i in units) {\n        if (event.target.name === i.units) {\n          position = i;\n          unit = units[i];\n        }\n      }\n    }\n\n    switch (event.target.placeholder) {\n      case 'unit':\n        unit.unit = event.target.value;\n        break;\n\n      case 'sizes':\n        unit.sizes = event.target.value;\n        break;\n\n      case 'placement':\n        unit.placement = event.target.value;\n    }\n\n    setCurrentUnit(unit);\n    console.log('id:: ', event.target.name, 'in unitChanged: ', currentUnit);\n  };\n\n  return React.createElement(SimpleFlexWrapper, {\n    top: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(WrapAreas, {\n    adjust: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(WebStiteName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), test.map((el, i) => {\n    return React.createElement(\"div\", {\n      key: el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" el \");\n  }), React.createElement(AddButton, {\n    justify: 'center',\n    top: '50px',\n    onClick: addUnits,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: \"Generate\",\n    onClick: generate,\n    top: \"80px\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })));\n};\n\nexport { CsvGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js"],"names":["React","useState","useEffect","ReactDOM","styled","AddButton","InputText","ColumnFlexWrapper","SimpleFlexWrapper","WrapAreas","Label","Button","testNameToKey","ComponentWrapper","div","InputWrapper","WebStiteName","props","AddUnits","unit","CsvGeneration","units","setUnits","sizes","placement","currentUnit","setCurrentUnit","test","setTest","console","log","generate","addUnits","event","l","o","push","_units","unshift","unitChanged","position","target","name","forEach","i","placeholder","value","map","el"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { ColumnFlexWrapper, SimpleFlexWrapper, WrapAreas } from '../styles/FlexWrapper';\nimport { Label } from '../styles/LabelAndFont';\nimport { Button } from '../styles/Buttons';\nimport { testNameToKey } from 'jest-snapshot/build/utils';\n\n\n\n// const Card = styled.div`\n//   ${rounded}\n//   ${column}\n// `\nconst ComponentWrapper = styled.div`\n\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n\n    @media(max-width: 862px) {\n        margin-left: 280px;\n        display: block\n    }\n`;\n\nconst InputWrapper = styled.div`\n`;\n\nconst WebStiteName = (props) => (\n    <ComponentWrapper>\n        <InputWrapper >\n            <InputText placeholder=\"Website Name\" />\n        </InputWrapper>\n    </ComponentWrapper>\n);\n\nconst AddUnits = (props) => (\n    <SimpleFlexWrapper top=\"20px\" justify=\"space-between\">\n        <InputText name={props.unit} placeholder=\"unit\" {...props} />\n        <InputText name={props.unit} placeholder=\"sizes\" {...props} />\n        <InputText name={props.unit} placeholder=\"placement\" {...props} />\n    </SimpleFlexWrapper>\n);\n\n\nconst CsvGeneration = () => {\n    // Declare a new state variable, which we'll call \"count\"\n    const [units, setUnits] = useState([{ unit: '', sizes: '', placement: '' }]);\n    const [currentUnit, setCurrentUnit] = useState({ unit: '', sizes: '', placement: '' });\n    const [test, setTest] = useState(['o']);\n\n\n\n    useEffect(() => {\n\n        console.log('useEffect: ', test);\n\n    },[])\n\n    const generate = () => {\n        console.log('bum dingsing');\n    }\n\n\n\n    const addUnits = (event) => {\n        var l = test;\n        // l.unshift('ll');\n        var o = ['รถ'];\n        l.push('p');\n        setTest(l);\n        if (currentUnit.unit) {\n            console.log('jjjjj:: ', currentUnit.unit);\n            var _units = units;\n            _units.unshift(currentUnit);\n            setUnits(_units);\n        }\n        console.log('in add Units: ', test);\n    }\n\n    const unitChanged = (event) => {\n        var unit;\n        var position;\n        if (event.target.name === '') {\n            unit = currentUnit;\n        }\n        else {\n            units.forEach()\n            for (var i in units) {\n                if (event.target.name === i.units) {\n                    position = i;\n                    unit = units[i];\n                }\n            }\n        }\n\n        switch (event.target.placeholder) {\n            case 'unit':\n                unit.unit = event.target.value;\n                break;\n            case 'sizes':\n                unit.sizes = event.target.value;\n                break;\n            case 'placement':\n                unit.placement = event.target.value;\n        }\n        setCurrentUnit(unit);\n        console.log('id:: ', event.target.name, 'in unitChanged: ', currentUnit);\n    }\n\n    return (\n        <SimpleFlexWrapper top=\"30px\">\n            <WrapAreas adjust=\"true\">\n                <WebStiteName />\n                {/* {units.map((ele, index) => (\n                    <AddUnits key={ele.unit + index} name={ele.unit} onChange={unitChanged} />\n                ))} */}\n\n                {test.map((el, i) => { return <div key={el}> el </div> })}\n                <AddButton justify={'center'} top={'50px'} onClick={addUnits} />\n                <Button name={\"Generate\"} onClick={generate} top=\"80px\" justify=\"center\" />\n            </WrapAreas>\n        </SimpleFlexWrapper>\n    );\n}\n\nexport { CsvGeneration };\n"]},"metadata":{},"sourceType":"module"}