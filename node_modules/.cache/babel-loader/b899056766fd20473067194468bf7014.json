{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/components/SlotsGeneration.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { InputArea, OutputArea } from '../styles/InputOutputFields'; // import { Button } from '../styles/Buttons';\n\nimport { Slider } from '../styles/molecules/Slider';\nimport { fontSetting } from '../styles/LabelAndFont';\nimport { InputText } from '../styles/InputOutputFields';\nimport { ColumnFlexWrapper, SimpleFlexWrapper, WrapAreas } from '../styles/Wrapper';\nimport { Dropdown } from '../styles/molecules/Dropdown'; // import { configGenration } from '../services/ConfigGeneration'\n\nimport { configGeneration } from '../services/CGenerationService';\nimport { bidder } from '../services/Helpers';\nimport { StandardInput } from '../styles/molecules/StandardInput';\nimport { navigate } from \"@reach/router\";\nimport { ButtonElement } from '../styles/Buttons';\nimport { relative } from 'upath';\nimport { truncate } from 'fs';\nconst InputField = styled(InputArea)`\n    flex: 0 0 ${props => props.height ? props.height : '30%'};\n    margin-top: 14px;\n    outline: none;\n    // @media(max-width: 1363px) {\n    //     flex: 0 0 48%;\n    // }\n    // @media(max-width: 550px) {\n    //     flex: 0 0 46%;\n    // }\n`;\nconst UnitNameWrapper = styled.div`\n    margin: 20px 0  50px 0;\n`;\n\nconst ButtonArea = props => React.createElement(SimpleFlexWrapper, {\n  justify: props.justify,\n  top: props.top,\n  style: {\n    marginBottom: '50px'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(ButtonElement, Object.assign({\n  id: \"button1\",\n  bColor: props.color1\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), props.name1), React.createElement(ButtonElement, Object.assign({\n  id: \"button2\",\n  bColor: props.color2,\n  marginL: \"15px\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), props.name2));\n\nconst UnitName = props => React.createElement(UnitNameWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(InputText, Object.assign({\n  marginLR: props.marginLR,\n  style: {\n    width: '100%'\n  },\n  placeholder: \"Unit name\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})));\n\nconst InputPageName = styled(InputField)`\n    flex: 0 0 150px;\n    height: 24px;\n    resize: none;\n    border: none;\n    border-bottom: 1px solid  ;\n    padding: 0 0 4.2px;\n    margin: 0;\n    border-radius: 0;\n    overflow: auto;\n    white-space: nowrap;\n    font-weight: 500;\n    ${fontSetting};\n    @media(max-width: 1401px) {\n        flex: 0 0 10%;\n    }\n`;\nconst DistanceInput = styled.div`\n    margin-top: 14px;\n`;\nconst OutputField = styled(OutputArea)`\n    flex: 0 0 30vh;\n    margin-top: 14px;\n    padding: 2px 0 0 2px;\n\n`;\nconst ConfigSetting = styled(SimpleFlexWrapper)`\n    justify-content: flex-start;\n    justify-content: space-between;\n    max-width: 60%;\n    @media(max-width: 1624px) {\n        max-width: 70%;\n\n    }\n    @media(max-width: 1160px) {\n        flex-flow: column;\n        // min-width: 229px\n        max-width: 40px;\n    }\n`;\nconst ConfigWrapper = styled.div`\n    margin: 50px 0 0 0;\n`;\nconst Distance = styled.div`\n    width: 15px;\n`;\nconst Warning = styled.div`\n    position: relative;\n    margin-bottom: ${props => props.marginB ? props.marginB : '0px'};\n    &::after{\n        position: absolute;\n    }\n    top: ${props => props.top ? props.top : '0px'};\n    font-weight: 900;\n    ${fontSetting};\n    color: #c82333;\n    background-color: #e0abb0;\n    border-radius: 4px;\n    padding: 2px 0 2px 4px;\n    display: ${props => props.show ? 'block' : 'none'};\n`; // display:  none;\n\nconst SlotsGeneration = () => {\n  // Declare a new state variable, which we'll call \"count\"\n  const [output, setOutput] = useState(\"Output\");\n  const [isClipBChecked, setIsClipBChecked] = useState(true);\n  const [isForConfigGeneration, setIsForConfigGeneration] = useState(true);\n  const [unitName, setUnitName] = useState('');\n  const [inExpand, setInExpand] = useState('');\n  const [priorityLoad, setPriorityLoad] = useState('');\n  const [collapseEDiv, setCollapseEDiv] = useState('');\n  const [headerBidding, setHeaderBidding] = useState('');\n  const [lazyLoad, setLazyLoad] = useState('');\n  const [ignore, setIgnore] = useState('');\n  const [size, setSize] = useState('');\n  const [sizeMapping, setSizeMapping] = useState('');\n  const [targeting, setTargeting] = useState('');\n  const [slots, setSlots] = useState([]);\n  const [warUnitName, setWarUnitName] = useState(false);\n  const [warSize, setWarSize] = useState(false);\n  const [warInExpand, setWarInExpand] = useState(false);\n  const [warPriorityLoad, setWarPriorityLoad] = useState(false);\n  const [warCollapseEDiv, setWarCollapseEDiv] = useState(false);\n  const [warHeaderBidding, setWarHeaderBidding] = useState(false);\n  const [warLazyLoad, setWarLazyLoad] = useState(false);\n  const [warIgnore, setWarIgnore] = useState(false);\n  const sspNames = [];\n\n  for (let [key, value] of Object.entries(bidder)) {\n    sspNames.push(value);\n  }\n\n  const addToSlots = () => {\n    const _slots = slots;\n    const unit = {};\n\n    if (unitName) {\n      unit.unit = unitName;\n    }\n\n    if (inExpand) {\n      unit.initiallyExpanded = inExpand;\n    }\n\n    if (priorityLoad) {\n      unit.priorityLoad = priorityLoad;\n    }\n\n    if (collapseEDiv) {\n      unit.collapseEmptyDiv = collapseEDiv;\n    }\n\n    if (headerBidding) {\n      unit.headerBidding = headerBidding;\n    }\n\n    if (lazyLoad) {\n      unit.lazyLoad = lazyLoad;\n    }\n\n    if (ignore) {\n      unit.ignore = ignore;\n    }\n\n    if (size) {\n      unit.size = size;\n    }\n\n    if (sizeMapping) {\n      unit.sizeMapping = sizeMapping;\n    }\n\n    if (targeting) {\n      unit.targeting = targeting;\n    }\n\n    if (Object.keys(unit).length > 0) {\n      _slots.push(unit);\n\n      setOutput(\"slots: \" + _slots.slots);\n    }\n  };\n\n  const isBoolean = data => {\n    if (typeof data === 'boolean') {\n      return true;\n    }\n\n    return false;\n  };\n\n  const setClipboard = outText => {\n    navigator.clipboard.writeText(outText).then(function () {\n      console.log(\"Copied to clipboard successfully!\");\n    }, function () {\n      console.error(\"Unable to write to clipboard.\");\n    });\n  };\n\n  const setData = () => {\n    if (isForConfigGeneration) {\n      navigate('config', {\n        state: {\n          slots: slots\n        }\n      });\n    } else {\n      setOutput(\"slots: \" + slots);\n    }\n\n    if (isClipBChecked) {\n      setClipboard(\"slots: \" + slots);\n    }\n  };\n\n  useEffect(() => {\n    if (warUnitName) {\n      if (unitName) setWarUnitName(false);\n    }\n\n    if (warSize) {\n      if (size) setWarSize(false);\n    }\n\n    if (warInExpand) {\n      console.log('warInExpand ', warInExpand);\n\n      if (isBoolean(inExpand)) {\n        console.log('inExpand', inExpand);\n        setWarInExpand(false);\n      }\n    }\n\n    if (warPriorityLoad) if (isBoolean(priorityLoad)) setWarPriorityLoad(false);\n    if (warCollapseEDiv) if (isBoolean(collapseEDiv)) setWarCollapseEDiv(false);\n    if (warHeaderBidding) if (isBoolean(headerBidding)) setWarHeaderBidding(false);\n    if (warLazyLoad) if (isBoolean(lazyLoad)) setWarLazyLoad(false);\n    if (warIgnore) if (isBoolean(ignore)) setIgnore(false);\n  });\n\n  const generateOrAdd = event => {\n    var isFault = false;\n    if (!unitName) setWarUnitName(true);\n    if (!size) setWarSize(true);\n    if (!size || !unitName) isFault = true;\n\n    if (inExpand) {\n      console.log('inBoolean ööö', isBoolean(inExpand));\n\n      if (!isBoolean(inExpand)) {\n        setWarInExpand(true);\n        isFault = true;\n      }\n    }\n\n    if (priorityLoad) {\n      if (!isBoolean(priorityLoad)) {\n        setWarPriorityLoad(true);\n        isFault = true;\n      }\n    }\n\n    if (collapseEDiv) {\n      if (!isBoolean(collapseEDiv)) {\n        setWarCollapseEDiv(true);\n        isFault = true;\n      }\n    }\n\n    if (headerBidding) {\n      if (!isBoolean(headerBidding)) {\n        setWarHeaderBidding(true);\n        isFault = true;\n      }\n    }\n\n    if (lazyLoad) {\n      if (!isBoolean(lazyLoad)) {\n        setWarLazyLoad(true);\n        isFault = true;\n      }\n    }\n\n    if (ignore) {\n      if (!isBoolean(ignore)) {\n        setWarIgnore(true);\n        isFault = true;\n      }\n    }\n\n    console.log('in generate: ', warInExpand);\n    if (isFault) return;\n\n    switch (event.target.id) {\n      case 'button1':\n        addToSlots();\n        break;\n\n      case 'button2':\n        setData();\n        break;\n    }\n  };\n\n  return React.createElement(SimpleFlexWrapper, {\n    top: \"50px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(WrapAreas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(ConfigWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(ConfigSetting, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    name: \"Use data for config generation\",\n    addSpaceH: \"4px\",\n    checked: isForConfigGeneration,\n    onChange: () => setIsForConfigGeneration(!isForConfigGeneration),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }), React.createElement(Distance, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }), \"    \", React.createElement(Slider, {\n    name: \"Save to clipboard\",\n    addSpaceH: \"4px\",\n    checked: isClipBChecked,\n    onChange: () => setIsClipBChecked(!isClipBChecked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }))), React.createElement(UnitName, {\n    marginLR: \"0\",\n    onChange: e => setUnitName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }), React.createElement(Warning, {\n    show: warUnitName,\n    top: \"-40px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, \"Unit name is required\"), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    width: \"100%\",\n    placeholder: \"Initially expanded\",\n    onChange: e => setInExpand(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }), React.createElement(Warning, {\n    show: warInExpand,\n    marginB: \"10px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, \"Only boolean type accepted\"), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Priority load\",\n    onChange: e => setPriorityLoad(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }), React.createElement(Warning, {\n    show: warPriorityLoad,\n    marginB: \"10px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, \"Only boolean type accepted\"), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Collapse empty div\",\n    onChange: e => setCollapseEDiv(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }), React.createElement(Warning, {\n    show: warCollapseEDiv,\n    marginB: \"10px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, \"Only boolean type accepted\"), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Header bidding\",\n    onChange: e => setHeaderBidding(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }), React.createElement(Warning, {\n    show: warHeaderBidding,\n    marginB: \"10px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, \"Only boolean type accepted\"), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Lazy load\",\n    onChange: e => setLazyLoad(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }), React.createElement(Warning, {\n    show: warLazyLoad,\n    marginB: \"10px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, \"Only boolean type accepted\"), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Ignore\",\n    onChange: e => setIgnore(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }), React.createElement(Warning, {\n    show: warIgnore,\n    marginB: \"10px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Only boolean type accepted\"), React.createElement(DistanceInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    placeholder: \"Size\",\n    height: \"15%\",\n    onChange: e => setSize(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }), React.createElement(Warning, {\n    show: warSize,\n    top: \"10px\",\n    marginB: \"10px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, \"Size is required\"), React.createElement(InputField, {\n    placeholder: \"Size Mapping\",\n    onChange: e => setSizeMapping(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    placeholder: \"Targeting\",\n    onChange: e => setTargeting(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }), React.createElement(OutputField, {\n    style: {\n      color: output === \"Output\" ? \" grey\" : null\n    },\n    dangerouslySetInnerHTML: {\n      __html: output\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }), React.createElement(ButtonArea, {\n    name1: \"Add Unit\",\n    name2: \"Generate\",\n    color1: \"#ffc107\",\n    onClick: generateOrAdd,\n    top: \"14px\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  })));\n};\n\nexport { SlotsGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/components/SlotsGeneration.js"],"names":["React","useState","useEffect","styled","InputArea","OutputArea","Slider","fontSetting","InputText","ColumnFlexWrapper","SimpleFlexWrapper","WrapAreas","Dropdown","configGeneration","bidder","StandardInput","navigate","ButtonElement","relative","truncate","InputField","props","height","UnitNameWrapper","div","ButtonArea","justify","top","marginBottom","color1","name1","color2","name2","UnitName","marginLR","width","InputPageName","DistanceInput","OutputField","ConfigSetting","ConfigWrapper","Distance","Warning","marginB","show","SlotsGeneration","output","setOutput","isClipBChecked","setIsClipBChecked","isForConfigGeneration","setIsForConfigGeneration","unitName","setUnitName","inExpand","setInExpand","priorityLoad","setPriorityLoad","collapseEDiv","setCollapseEDiv","headerBidding","setHeaderBidding","lazyLoad","setLazyLoad","ignore","setIgnore","size","setSize","sizeMapping","setSizeMapping","targeting","setTargeting","slots","setSlots","warUnitName","setWarUnitName","warSize","setWarSize","warInExpand","setWarInExpand","warPriorityLoad","setWarPriorityLoad","warCollapseEDiv","setWarCollapseEDiv","warHeaderBidding","setWarHeaderBidding","warLazyLoad","setWarLazyLoad","warIgnore","setWarIgnore","sspNames","key","value","Object","entries","push","addToSlots","_slots","unit","initiallyExpanded","collapseEmptyDiv","keys","length","isBoolean","data","setClipboard","outText","navigator","clipboard","writeText","then","console","log","error","setData","state","generateOrAdd","event","isFault","target","id","e","color","__html"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { InputArea, OutputArea } from '../styles/InputOutputFields';\n// import { Button } from '../styles/Buttons';\nimport { Slider } from '../styles/molecules/Slider';\nimport { fontSetting } from '../styles/LabelAndFont';\nimport { InputText } from '../styles/InputOutputFields';\nimport { ColumnFlexWrapper, SimpleFlexWrapper, WrapAreas } from '../styles/Wrapper';\nimport { Dropdown } from '../styles/molecules/Dropdown';\n// import { configGenration } from '../services/ConfigGeneration'\nimport { configGeneration } from '../services/CGenerationService';\nimport { bidder } from '../services/Helpers';\nimport { StandardInput } from '../styles/molecules/StandardInput';\nimport { navigate } from \"@reach/router\"\n\nimport { ButtonElement } from '../styles/Buttons';\nimport { relative } from 'upath';\nimport { truncate } from 'fs';\nconst InputField = styled(InputArea)`\n    flex: 0 0 ${props => props.height ? props.height : '30%'};\n    margin-top: 14px;\n    outline: none;\n    // @media(max-width: 1363px) {\n    //     flex: 0 0 48%;\n    // }\n    // @media(max-width: 550px) {\n    //     flex: 0 0 46%;\n    // }\n`;\n\nconst UnitNameWrapper = styled.div`\n    margin: 20px 0  50px 0;\n`;\n\nconst ButtonArea = (props) => (\n    <SimpleFlexWrapper justify={props.justify} top={props.top} style={{ marginBottom: '50px' }} >\n        <ButtonElement id='button1' bColor={props.color1} {...props} >{props.name1}</ButtonElement>\n        <ButtonElement id='button2' bColor={props.color2} marginL='15px' {...props} >{props.name2}</ButtonElement>\n    </SimpleFlexWrapper>\n);\n\nconst UnitName = (props) => (\n    <UnitNameWrapper>\n        <InputText marginLR={props.marginLR} style={{ width: '100%' }} placeholder=\"Unit name\" {...props} />\n    </UnitNameWrapper>\n);\n\nconst InputPageName = styled(InputField)`\n    flex: 0 0 150px;\n    height: 24px;\n    resize: none;\n    border: none;\n    border-bottom: 1px solid  ;\n    padding: 0 0 4.2px;\n    margin: 0;\n    border-radius: 0;\n    overflow: auto;\n    white-space: nowrap;\n    font-weight: 500;\n    ${fontSetting};\n    @media(max-width: 1401px) {\n        flex: 0 0 10%;\n    }\n`;\n\nconst DistanceInput = styled.div`\n    margin-top: 14px;\n`;\n\n\nconst OutputField = styled(OutputArea)`\n    flex: 0 0 30vh;\n    margin-top: 14px;\n    padding: 2px 0 0 2px;\n\n`;\n\nconst ConfigSetting = styled(SimpleFlexWrapper)`\n    justify-content: flex-start;\n    justify-content: space-between;\n    max-width: 60%;\n    @media(max-width: 1624px) {\n        max-width: 70%;\n\n    }\n    @media(max-width: 1160px) {\n        flex-flow: column;\n        // min-width: 229px\n        max-width: 40px;\n    }\n`;\n\nconst ConfigWrapper = styled.div`\n    margin: 50px 0 0 0;\n`;\n\nconst Distance = styled.div`\n    width: 15px;\n`;\n\nconst Warning = styled.div`\n    position: relative;\n    margin-bottom: ${props => props.marginB ? props.marginB : '0px'};\n    &::after{\n        position: absolute;\n    }\n    top: ${props => props.top ? props.top : '0px'};\n    font-weight: 900;\n    ${fontSetting};\n    color: #c82333;\n    background-color: #e0abb0;\n    border-radius: 4px;\n    padding: 2px 0 2px 4px;\n    display: ${props => props.show ? 'block' : 'none'};\n`;\n\n\n// display:  none;\nconst SlotsGeneration = () => {\n    // Declare a new state variable, which we'll call \"count\"\n    const [output, setOutput] = useState(\"Output\");\n    const [isClipBChecked, setIsClipBChecked] = useState(true);\n    const [isForConfigGeneration, setIsForConfigGeneration] = useState(true);\n    const [unitName, setUnitName] = useState('');\n    const [inExpand, setInExpand] = useState('');\n    const [priorityLoad, setPriorityLoad] = useState('');\n    const [collapseEDiv, setCollapseEDiv] = useState('');\n    const [headerBidding, setHeaderBidding] = useState('');\n    const [lazyLoad, setLazyLoad] = useState('');\n    const [ignore, setIgnore] = useState('');\n    const [size, setSize] = useState('');\n    const [sizeMapping, setSizeMapping] = useState('');\n    const [targeting, setTargeting] = useState('');\n    const [slots, setSlots] = useState([]);\n\n    const [warUnitName, setWarUnitName] = useState(false);\n    const [warSize, setWarSize] = useState(false);\n\n\n    const [warInExpand, setWarInExpand] = useState(false);\n    const [warPriorityLoad, setWarPriorityLoad] = useState(false);\n    const [warCollapseEDiv, setWarCollapseEDiv] = useState(false);\n    const [warHeaderBidding, setWarHeaderBidding] = useState(false);\n    const [warLazyLoad, setWarLazyLoad] = useState(false);\n    const [warIgnore, setWarIgnore] = useState(false);\n\n    const sspNames = [];\n    for (let [key, value] of Object.entries(bidder)) {\n        sspNames.push(value);\n    }\n\n    const addToSlots = () => {\n        const _slots = slots;\n        const unit = {};\n        if (unitName) {\n            unit.unit = unitName;\n        } if (inExpand) {\n            unit.initiallyExpanded = inExpand;\n        } if (priorityLoad) {\n            unit.priorityLoad = priorityLoad;\n        } if (collapseEDiv) {\n            unit.collapseEmptyDiv = collapseEDiv;\n        } if (headerBidding) {\n            unit.headerBidding = headerBidding;\n        } if (lazyLoad) {\n            unit.lazyLoad = lazyLoad;\n        } if (ignore) {\n            unit.ignore = ignore;\n        } if (size) {\n            unit.size = size;\n        }\n        if (sizeMapping) {\n            unit.sizeMapping = sizeMapping;\n        }\n        if (targeting) {\n            unit.targeting = targeting;\n        }\n        if (Object.keys(unit).length > 0) {\n            _slots.push(unit)\n            setOutput(\"slots: \" + _slots.slots);\n        }\n    }\n\n    const isBoolean = (data) => {\n        if (typeof data === 'boolean') {\n            return true;\n        }\n        return false;\n    }\n\n    const setClipboard = (outText) => {\n        navigator.clipboard.writeText(outText).then(function () {\n            console.log(\"Copied to clipboard successfully!\");\n        }, function () {\n            console.error(\"Unable to write to clipboard.\");\n        });\n    }\n\n    const setData = () => {\n        if (isForConfigGeneration) {\n            navigate('config', { state: { slots: slots } });\n        } else {\n            setOutput(\"slots: \" + slots);\n        }\n        if (isClipBChecked) {\n            setClipboard(\"slots: \" + slots);\n        }\n    }\n\n    useEffect(() => {\n        if (warUnitName) {\n            if (unitName)\n                setWarUnitName(false);\n        }\n        if (warSize) {\n            if (size)\n                setWarSize(false);\n        }\n\n        if (warInExpand) {\n            console.log('warInExpand ', warInExpand);\n            if (isBoolean(inExpand)) {\n                console.log('inExpand', inExpand);\n                setWarInExpand(false);\n            }\n        }\n        if (warPriorityLoad)\n            if (isBoolean(priorityLoad))\n                setWarPriorityLoad(false);\n        if (warCollapseEDiv)\n            if (isBoolean(collapseEDiv))\n                setWarCollapseEDiv(false);\n        if (warHeaderBidding)\n            if (isBoolean(headerBidding))\n                setWarHeaderBidding(false);\n        if (warLazyLoad)\n            if (isBoolean(lazyLoad))\n                setWarLazyLoad(false);\n        if (warIgnore)\n            if (isBoolean(ignore))\n                setIgnore(false);\n\n    });\n\n    const generateOrAdd = (event) => {\n        var isFault = false;\n\n        if (!unitName)\n            setWarUnitName(true);\n        if (!size)\n            setWarSize(true);\n\n        if (!size || !unitName)\n            isFault = true;\n\n        if (inExpand) {\n            console.log('inBoolean ööö', isBoolean(inExpand));\n            if (!isBoolean(inExpand)) {\n                setWarInExpand(true);\n                isFault = true;\n            }\n        } if (priorityLoad) {\n            if (!isBoolean(priorityLoad)) {\n                setWarPriorityLoad(true);\n                isFault = true;\n            }\n        } if (collapseEDiv) {\n            if (!isBoolean(collapseEDiv)) {\n                setWarCollapseEDiv(true);\n                isFault = true;\n            }\n        } if (headerBidding) {\n            if (!isBoolean(headerBidding)) {\n                setWarHeaderBidding(true);\n                isFault = true;\n            }\n        } if (lazyLoad) {\n            if (!isBoolean(lazyLoad)) {\n                setWarLazyLoad(true);\n                isFault = true;\n\n            }\n        } if (ignore) {\n            if (!isBoolean(ignore)) {\n                setWarIgnore(true);\n                isFault = true;\n\n            }\n        }\n\n        console.log('in generate: ', warInExpand);\n        if (isFault) return;\n\n        switch (event.target.id) {\n            case 'button1':\n                addToSlots();\n                break;\n            case 'button2':\n                setData();\n                break;\n        }\n    }\n\n    return (\n        <SimpleFlexWrapper top=\"50px\" >\n            <WrapAreas>\n                <ConfigWrapper>\n                    <ConfigSetting>\n                        <Slider name={\"Use data for config generation\"} addSpaceH='4px' checked={isForConfigGeneration} onChange={() => setIsForConfigGeneration(!isForConfigGeneration)} />\n                        <Distance />    <Slider name={\"Save to clipboard\"} addSpaceH='4px' checked={isClipBChecked} onChange={() => setIsClipBChecked(!isClipBChecked)} />\n                    </ConfigSetting>\n                </ConfigWrapper>\n                <UnitName marginLR='0' onChange={(e) => setUnitName(e.target.value)} />\n                <Warning show={warUnitName} top='-40px'>Unit name is required</Warning>\n\n                <StandardInput marginLR='0' width='100%' placeholder=\"Initially expanded\" onChange={(e) => setInExpand(e.target.value)} />\n                <Warning show={warInExpand} marginB='10px' >Only boolean type accepted</Warning>\n\n                <StandardInput marginLR='0' placeholder=\"Priority load\" onChange={(e) => setPriorityLoad(e.target.value)} />\n                <Warning show={warPriorityLoad} marginB='10px' >Only boolean type accepted</Warning>\n\n                <StandardInput marginLR='0' placeholder=\"Collapse empty div\" onChange={(e) => setCollapseEDiv(e.target.value)} />\n                <Warning show={warCollapseEDiv} marginB='10px' >Only boolean type accepted</Warning>\n\n                <StandardInput marginLR='0' placeholder=\"Header bidding\" onChange={(e) => setHeaderBidding(e.target.value)} />\n                <Warning show={warHeaderBidding} marginB='10px' >Only boolean type accepted</Warning>\n\n                <StandardInput marginLR='0' placeholder=\"Lazy load\" onChange={(e) => setLazyLoad(e.target.value)} />\n                <Warning show={warLazyLoad} marginB='10px' >Only boolean type accepted</Warning>\n\n                <StandardInput marginLR='0' placeholder=\"Ignore\" onChange={(e) => setIgnore(e.target.value)} />\n                <Warning show={warIgnore} marginB='10px' >Only boolean type accepted</Warning>\n\n                < DistanceInput />\n                <InputField placeholder=\"Size\" height=\"15%\" onChange={(e) => setSize(e.target.value)} />\n                <Warning show={warSize} top='10px' marginB='10px' >Size is required</Warning>\n                <InputField placeholder=\"Size Mapping\" onChange={(e) => setSizeMapping(e.target.value)} />\n                <InputField placeholder=\"Targeting\" onChange={(e) => setTargeting(e.target.value)} />\n                <OutputField style={{ color: (output === \"Output\") ? \" grey\" : null }} dangerouslySetInnerHTML={{ __html: output }}></OutputField>\n                <ButtonArea name1={\"Add Unit\"} name2={\"Generate\"} color1='#ffc107' onClick={generateOrAdd} top=\"14px\" justify=\"flex-end\" />\n            </WrapAreas>\n        </SimpleFlexWrapper >\n    );\n}\n\nexport { SlotsGeneration };\n"]},"metadata":{},"sourceType":"module"}