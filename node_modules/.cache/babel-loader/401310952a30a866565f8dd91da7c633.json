{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { SimpleFlexWrapper, WrapAreas } from '../styles/Wrapper';\nimport { Button, ButtonElement } from '../styles/Buttons';\nimport { generateCsv } from '../services/CsvGenerationService';\nimport { csvPlaceholders } from '../services/Helpers';\nconst colBreakPoint = '801px'; // Minus button - -\n\nconst ComponentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n`;\nconst ComponentUnitWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n`;\nconst InputWrapper = styled.div`\n`;\nconst ResetButton = styled(ButtonElement)`\n    background-color: #dc3545;\n    padding: 2px 8px ;\n    margin-left: 25px;\n    border-color: #dc3545;\n    @media(max-width: ${colBreakPoint}) {\n      padding: 0;\n      margin:0;\n      height: 28px;\n    }\n`;\nconst UnitInput = styled(InputText)`\n   margin-bottom:  10px;\n`;\n\nconst WebStiteInput = props => React.createElement(ComponentWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(InputWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(InputText, Object.assign({\n  placeholder: props.placeholder,\n  width: props.width,\n  value: props.value\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}))));\n\nconst UnitWrapper = styled(SimpleFlexWrapper)`\n    @media(max-width: ${colBreakPoint}) {\n        flex-flow: column;\n        justify-content: center;\n        width: 60%;\n    }\n`;\nconst ButtonWrapper = styled(SimpleFlexWrapper)`\n    @media(max-width: ${colBreakPoint}) {\n        margin-top: 50px;\n    }\n`;\n\nconst GenerateButton = props => React.createElement(ButtonWrapper, {\n  justify: props.justify,\n  top: props.top,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, React.createElement(ButtonElement, Object.assign({\n  bColor: props.bColor\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), props.name));\n\nconst AddUnits = props => React.createElement(ComponentUnitWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(UnitWrapper, {\n  top: \"20px\",\n  justify: \"space-between\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(UnitInput, Object.assign({\n  name: props.pos,\n  placeholder: csvPlaceholders.UNIT,\n  value: props.unit\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n})), React.createElement(UnitInput, Object.assign({\n  name: props.pos,\n  placeholder: csvPlaceholders.SIZES,\n  value: props.sizes\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n})), React.createElement(UnitInput, Object.assign({\n  name: props.pos,\n  placeholder: csvPlaceholders.PLACEMENT,\n  value: props.placement\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n})), React.createElement(ResetButton, Object.assign({\n  name: props.pos,\n  onClick: props.removeUnit\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}), \" Delete  \")));\n\nconst transformUnit = unit => {\n  return unit;\n};\n\nconst transformSizes = sizes => {\n  return sizes;\n};\n\nconst CsvGeneration = props => {\n  const [units, setUnits] = useState([{\n    unit: '',\n    sizes: '',\n    placement: '',\n    website: ''\n  }]);\n  const [website, setWebsite] = useState('');\n  const [unitPrefix, setUnitPrefix] = useState('');\n\n  const generate = () => {\n    units.forEach(el => {\n      el.website = website;\n      el.unit = (unitPrefix + el.unit).trim();\n    });\n    generateCsv([...units]);\n  };\n\n  useEffect(() => {\n    // if (props.location.state.config)\n    // console.log('csv', props.location.state.config[0].params.addStringtocall[1][1]);\n    // console.log('csv2', props.location.state.config[0].params.addStringtocall[1][1]);\n    // console.log('csv', props.location.state.config,' ss ', props.location.state.config.params.addStringtocall[1][1]);\n    if (props.location.state.config) {\n      const slots = JSON.parse(props.location.state.slots);\n      const _units = units;\n      slots.slots.forEach((el, index) => {\n        _units[index].unit = transformUnit(el.unit);\n        _units[index].sizes = transformSizes(el.sizes);\n        _units[index].placement = '';\n      }); // setSlots(props.location.state.slots);\n    }\n  }, []);\n\n  const removeUnit = event => {\n    const _units = [];\n\n    for (var unitTemp in units) {\n      if (unitTemp === event.target.name) {\n        continue;\n      } else {\n        _units.push(units[unitTemp]);\n      }\n    }\n\n    setUnits(_units);\n  };\n\n  const addUnit = event => {\n    var _units = [...units];\n\n    _units.push({\n      unit: '',\n      sizes: '',\n      placement: ''\n    });\n\n    setUnits(_units);\n  };\n\n  const unitChanged = event => {\n    var _unit = units[event.target.name]; // var unitsSt = JSON.stringify(units);\n    // var _units = JSON.parse(unitsSt);\n    // var _unit = _units[event.target.name];\n    // console.log('units', units, 'name', event.target.name);\n\n    switch (event.target.placeholder) {\n      case csvPlaceholders.UNIT:\n        _unit.unit = event.target.value;\n        break;\n\n      case csvPlaceholders.SIZES:\n        _unit.sizes = event.target.value;\n        break;\n\n      case csvPlaceholders.PLACEMENT:\n        _unit.placement = event.target.value;\n        break;\n\n      case csvPlaceholders.PREFIX:\n    }\n  };\n\n  return React.createElement(SimpleFlexWrapper, {\n    top: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(WrapAreas, {\n    adjust: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(WebStiteInput, {\n    value: website,\n    placeholder: csvPlaceholders.WEBSITE,\n    onChange: e => setWebsite(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(WebStiteInput, {\n    value: unitPrefix,\n    placeholder: \"Unit prefix\",\n    onChange: e => setUnitPrefix(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), units.map((ele, index) => React.createElement(AddUnits, {\n    key: ele + index,\n    pos: index\n    /* unit={unit} sizes={sizes} placements={placements} */\n    ,\n    onChange: unitChanged,\n    removeUnit: removeUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(AddButton, {\n    justify: 'center',\n    top: '50px',\n    onClick: addUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(GenerateButton, {\n    name: \"Generate\",\n    onClick: generate,\n    top: \"80px\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })));\n};\n\nexport { CsvGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/components/CsvGeneration.js"],"names":["React","useState","useEffect","styled","AddButton","InputText","SimpleFlexWrapper","WrapAreas","Button","ButtonElement","generateCsv","csvPlaceholders","colBreakPoint","ComponentWrapper","div","ComponentUnitWrapper","InputWrapper","ResetButton","UnitInput","WebStiteInput","props","placeholder","width","value","UnitWrapper","ButtonWrapper","GenerateButton","justify","top","bColor","name","AddUnits","pos","UNIT","unit","SIZES","sizes","PLACEMENT","placement","removeUnit","transformUnit","transformSizes","CsvGeneration","units","setUnits","website","setWebsite","unitPrefix","setUnitPrefix","generate","forEach","el","trim","location","state","config","slots","JSON","parse","_units","index","event","unitTemp","target","push","addUnit","unitChanged","_unit","PREFIX","WEBSITE","e","map","ele"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AddButton } from '../styles/Buttons';\nimport { InputText } from '../styles/InputOutputFields';\nimport { SimpleFlexWrapper, WrapAreas } from '../styles/Wrapper';\nimport { Button, ButtonElement } from '../styles/Buttons';\nimport { generateCsv } from '../services/CsvGenerationService';\nimport { csvPlaceholders } from '../services/Helpers';\n\n\nconst colBreakPoint = '801px';\n// Minus button - -\nconst ComponentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0 ;\n`;\n\n\nconst ComponentUnitWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n`;\nconst InputWrapper = styled.div`\n`;\n\nconst ResetButton = styled(ButtonElement)`\n    background-color: #dc3545;\n    padding: 2px 8px ;\n    margin-left: 25px;\n    border-color: #dc3545;\n    @media(max-width: ${colBreakPoint}) {\n      padding: 0;\n      margin:0;\n      height: 28px;\n    }\n`;\n\nconst UnitInput = styled(InputText)`\n   margin-bottom:  10px;\n`;\n\nconst WebStiteInput = (props) => (\n    <ComponentWrapper>\n        <InputWrapper >\n            <InputText placeholder={props.placeholder} width={props.width} value={props.value} {...props} />\n        </InputWrapper>\n    </ComponentWrapper>\n);\n\nconst UnitWrapper = styled(SimpleFlexWrapper)`\n    @media(max-width: ${colBreakPoint}) {\n        flex-flow: column;\n        justify-content: center;\n        width: 60%;\n    }\n`;\n\nconst ButtonWrapper = styled(SimpleFlexWrapper)`\n    @media(max-width: ${colBreakPoint}) {\n        margin-top: 50px;\n    }\n`;\n\nconst GenerateButton = (props) => (\n    <ButtonWrapper justify={props.justify} top={props.top} >\n        <ButtonElement bColor={props.bColor} {...props} >{props.name}</ButtonElement>\n    </ButtonWrapper>\n);\n\nconst AddUnits = (props) => (\n    <ComponentUnitWrapper>\n        <UnitWrapper top=\"20px\" justify=\"space-between\" >\n            <UnitInput name={props.pos} placeholder={csvPlaceholders.UNIT} value={props.unit} {...props} />\n            <UnitInput name={props.pos} placeholder={csvPlaceholders.SIZES} value={props.sizes} {...props} />\n            <UnitInput name={props.pos} placeholder={csvPlaceholders.PLACEMENT} value={props.placement}   {...props} />\n            <ResetButton name={props.pos} onClick={props.removeUnit}{...props}> Delete  </ResetButton>\n        </UnitWrapper>\n    </ComponentUnitWrapper>\n);\n\nconst transformUnit = (unit) => {\n\n\n    return unit;\n}\nconst transformSizes = (sizes) => {\n\n\n\n    return sizes;\n}\n\n\nconst CsvGeneration = (props) => {\n    const [units, setUnits] = useState([{ unit: '', sizes: '', placement: '', website: '' }]);\n    const [website, setWebsite] = useState('');\n    const [unitPrefix, setUnitPrefix] = useState('');\n\n    const generate = () => {\n        units.forEach(el => {\n            el.website = website;\n            el.unit = (unitPrefix + el.unit).trim();\n        });\n        generateCsv([...units]);\n    }\n\n    useEffect(() => {\n        // if (props.location.state.config)\n        // console.log('csv', props.location.state.config[0].params.addStringtocall[1][1]);\n        // console.log('csv2', props.location.state.config[0].params.addStringtocall[1][1]);\n        // console.log('csv', props.location.state.config,' ss ', props.location.state.config.params.addStringtocall[1][1]);\n        if (props.location.state.config) {\n            const slots = JSON.parse(props.location.state.slots);\n            const _units = units;\n            slots.slots.forEach((el, index) => {\n                _units[index].unit = transformUnit(el.unit);\n                _units[index].sizes = transformSizes(el.sizes);\n                _units[index].placement = '';\n            })\n\n            // setSlots(props.location.state.slots);\n        }\n    }, []);\n\n    const removeUnit = (event) => {\n        const _units = [];\n        for (var unitTemp in units) {\n            if (unitTemp === event.target.name) {\n                continue;\n            } else {\n                _units.push(units[unitTemp]);\n            }\n        }\n        setUnits(_units);\n    }\n\n    const addUnit = (event) => {\n        var _units = [...units];\n        _units.push({ unit: '', sizes: '', placement: '' });\n        setUnits(_units);\n    }\n\n    const unitChanged = (event) => {\n        var _unit = units[event.target.name];\n\n        // var unitsSt = JSON.stringify(units);\n        // var _units = JSON.parse(unitsSt);\n        // var _unit = _units[event.target.name];\n        // console.log('units', units, 'name', event.target.name);\n        switch (event.target.placeholder) {\n            case csvPlaceholders.UNIT:\n                _unit.unit = event.target.value;\n                break;\n            case csvPlaceholders.SIZES:\n                _unit.sizes = event.target.value;\n                break;\n            case csvPlaceholders.PLACEMENT:\n                _unit.placement = event.target.value;\n                break;\n            case csvPlaceholders.PREFIX:\n\n        }\n    }\n    return (\n        <SimpleFlexWrapper top=\"30px\">\n            <WrapAreas adjust=\"true\">\n                <WebStiteInput value={website} placeholder={csvPlaceholders.WEBSITE} onChange={(e) => setWebsite(e.target.value)} />\n                <WebStiteInput value={unitPrefix} placeholder='Unit prefix' onChange={(e) => setUnitPrefix(e.target.value)} />\n                {units.map((ele, index) => (\n                    <AddUnits key={ele + index} pos={index} /* unit={unit} sizes={sizes} placements={placements} */ onChange={unitChanged} removeUnit={removeUnit} />\n                ))}\n                <AddButton justify={'center'} top={'50px'} onClick={addUnit} />\n                <GenerateButton name={\"Generate\"} onClick={generate} top=\"80px\" justify=\"center\" />\n            </WrapAreas>\n        </SimpleFlexWrapper>\n    );\n}\n\nexport { CsvGeneration };\n"]},"metadata":{},"sourceType":"module"}