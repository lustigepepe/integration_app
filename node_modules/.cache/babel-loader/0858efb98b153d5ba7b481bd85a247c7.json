{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst SliderWrapper = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n`;\nconst CheckBox = styled.input`\n    opacity: 0;\n    width: 0;\n    height: 0;\n`; // ${CheckBox}:focus & {\n//     box-shadow: 0 0 1px #2196F3;\n// } \n// ${CheckBox}:checked & {\n//     -webkit-transform: translateX(26px);\n//     -ms-transform: translateX(26px);\n//     transform: translateX(26px);\n// }\n\nconst Slider = () => {\n  const [isChecked, setIsChecked] = useState(true);\n  const SliderRound = styled.span`\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: .4s;\n    transition: .4s;\n    border-radius: 24px;\n\n    &:before {\n\n        border-radius: 50%;\n        position: absolute;\n        content: \"\";\n        height: 30px;\n        width: 30px;\n        left: 1px;\n        bottom: -3px;\n        background-color: white;\n        -webkit-transition: .4s;\n        transition: .4s;\n    }\n\n    ${isChecked}:hover & {\n        background-color: #1a73e8;\n    }\n`;\n  return React.createElement(SliderWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(CheckBox, {\n    type: \"checkbox\",\n    onChange: () => setIsChecked(!isChecked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(SliderRound, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nexport { Slider };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/styles/templates/Slider.js"],"names":["React","useState","styled","SliderWrapper","div","CheckBox","input","Slider","isChecked","setIsChecked","SliderRound","span"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;;;;;CAAjC;AAOA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,KAAM;;;;CAA9B,C,CAOA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AAGA,QAAMS,WAAW,GAAGR,MAAM,CAACS,IAAK;;;;;;;;;;;;;;;;;;;;;;;;;;MA0B9BH,SAAU;;;CA1BZ;AAiCA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,QAAQ,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAcH,CApDD;;AAyDA,SAASD,MAAT","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components'\n\nconst SliderWrapper = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    height: 24px;\n`;\n\nconst CheckBox = styled.input`\n    opacity: 0;\n    width: 0;\n    height: 0;\n`;\n\n\n// ${CheckBox}:focus & {\n//     box-shadow: 0 0 1px #2196F3;\n\n\n\n// } \n// ${CheckBox}:checked & {\n//     -webkit-transform: translateX(26px);\n//     -ms-transform: translateX(26px);\n//     transform: translateX(26px);\n// }\n\n\n\n\nconst Slider = () => {\n\n    const [isChecked, setIsChecked] = useState(true);\n\n\n    const SliderRound = styled.span`\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: .4s;\n    transition: .4s;\n    border-radius: 24px;\n\n    &:before {\n\n        border-radius: 50%;\n        position: absolute;\n        content: \"\";\n        height: 30px;\n        width: 30px;\n        left: 1px;\n        bottom: -3px;\n        background-color: white;\n        -webkit-transition: .4s;\n        transition: .4s;\n    }\n\n    ${isChecked}:hover & {\n        background-color: #1a73e8;\n    }\n`;\n\n\n\n    return (\n        <SliderWrapper>\n            <CheckBox type=\"checkbox\" onChange={() => setIsChecked(!isChecked)} />\n\n            <SliderRound />\n\n        </SliderWrapper>\n\n\n\n\n\n    );\n\n}\n\n\n\n\nexport { Slider };"]},"metadata":{},"sourceType":"module"}