{"ast":null,"code":"var _jsxFileName = \"/Users/hagen.handtke/Documents/urban_integration/src/components/SlotsGeneration.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { InputArea, OutputArea } from '../styles/InputOutputFields'; // import { Button } from '../styles/Buttons';\n\nimport { Slider } from '../styles/molecules/Slider';\nimport { fontSetting } from '../styles/LabelAndFont';\nimport { InputText } from '../styles/InputOutputFields';\nimport { ColumnFlexWrapper, SimpleFlexWrapper, WrapAreas } from '../styles/Wrapper';\nimport { Dropdown } from '../styles/molecules/Dropdown'; // import { configGenration } from '../services/ConfigGeneration'\n\nimport { configGeneration } from '../services/CGenerationService';\nimport { bidder } from '../services/Helpers';\nimport { StandardInput } from '../styles/molecules/StandardInput';\nimport { ButtonElement } from '../styles/Buttons';\nconst InputField = styled(InputArea)`\n    flex: 0 0 ${props => props.height ? props.height : '30%'};\n    margin-top: 14px;\n    outline: none;\n    @media(max-width: 1363px) {\n        flex: 0 0 48%;\n    }\n    @media(max-width: 550) {\n        flex: 0 0 46%;\n    }\n`;\nconst UnitNameWrapper = styled.div`\n    margin: 20px 0  50px 0;\n`;\n\nconst ButtonArea = props => React.createElement(SimpleFlexWrapper, {\n  justify: props.justify,\n  top: props.top,\n  style: {\n    marginBottom: '50px'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(ButtonElement, Object.assign({\n  id: \"button1\",\n  bColor: props.color1\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), props.name1), React.createElement(ButtonElement, Object.assign({\n  id: \"button2\",\n  bColor: props.color2,\n  marginL: \"15px\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), props.name2));\n\nconst UnitName = props => React.createElement(UnitNameWrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(InputText, {\n  marginLR: props.marginLR,\n  style: {\n    width: '100%'\n  },\n  placeholder: \"Unit name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}));\n\nconst InputPageName = styled(InputField)`\n    flex: 0 0 150px;\n    height: 24px;\n    resize: none;\n    border: none;\n    border-bottom: 1px solid  ;\n    padding: 0 0 4.2px;\n    margin: 0;\n    border-radius: 0;\n    overflow: auto;\n    white-space: nowrap;\n    font-weight: 500;\n    ${fontSetting};\n    @media(max-width: 1401px) {\n        flex: 0 0 10%;\n    }\n`;\nconst DistanceInput = styled.div`\n    margin-top: 14px;\n`;\nconst OutputField = styled(OutputArea)`\n    flex: 0 0 30vh;\n    margin-top: 14px;\n    padding: 2px 0 0 2px;\n\n`;\nconst ConfigSetting = styled(SimpleFlexWrapper)`\n    justify-content: flex-start;\n    justify-content: space-between;\n    max-width: 60%;\n    @media(max-width: 1624px) {\n        max-width: 70%;\n\n    }\n    @media(max-width: 1160px) {\n        flex-flow: column;\n        // min-width: 229px\n        max-width: 40px;\n    }\n`;\nconst ConfigWrapper = styled.div`\n    margin: 50px 0 0 0;\n`;\nconst Distance = styled.div`\n    width: 15px;\n`;\n\nconst SlotsGeneration = () => {\n  // Declare a new state variable, which we'll call \"count\"\n  const [output, setOutput] = useState(\"Output\");\n  const [inConfig, setInConfig] = useState([]);\n  const [inSlots, setInSlots] = useState([]);\n  const [isClipBChecked, setIsClipBChecked] = useState(true);\n  const [isForConfigGeneration, setIsForConfigGeneration] = useState(true);\n  const [inSsp, setSsp] = useState('criteo');\n  const [inPageName, setInPageName] = useState('');\n  const [unitName, setUnitName] = useState('');\n  const [inExpand, setInExpand] = useState('');\n  const [priorityLoad, setPriorityLoad] = useState('');\n  const [collapseEDiv, setCollapseEDiv] = useState('');\n  const [headerBidding, setHeaderBidding] = useState('');\n  const [lazyLoad, setLazyLoad] = useState('');\n  const [ignore, setIgnore] = useState('');\n  const [size, setSize] = useState('');\n  const [sizeMapping, setSizeMapping] = useState('');\n  const [targeting, setTargeting] = useState('');\n  const [slots, setSlots] = useState({\n    slots: []\n  });\n  const sspNames = [];\n\n  for (let [key, value] of Object.entries(bidder)) {\n    sspNames.push(value);\n  }\n\n  const addToSlots = () => {\n    const _slots = slots;\n    const unit = {};\n\n    if (lazyLoad) {\n      console.log('ll', lazyLoad);\n    }\n\n    if (Object.keys(unit)) _slots.slots.push({});\n    console.log('add: ', slots);\n  };\n\n  const inputFromValue = (configString, slotString, pageName) => {\n    var _config, _slots;\n\n    var _latePageN = false; // if (typeof configString === \"string\") {\n    //     _config = configString.replace(/([a-zA-Z0-9]+?):/g, '\"$1\":');\n    //     _config = _config.replace(/'/g, '\"');\n    //     try {\n    //         _config = JSON.parse(_config);\n    //     } catch (ex) {\n    //         alert('Config is not valid JSON \\nPlease check the console for more detail');\n    //         console.error(ex);\n    //     }\n    // }\n    // if (typeof slotString === \"string\") {\n    //     _slots = slotString.replace(/([a-zA-Z0-9]+?):/g, '\"$1\":');\n    //     _slots = _slots.replace(/'/g, '\"');\n    //     try {\n    //         _slots = JSON.parse(_slots);\n    //     } catch (ex) {\n    //         alert('Slots are not valid JSON \\nPlease check the console for more detail');\n    //         console.error(ex);\n    //     }\n    // }\n    // if (typeof _slots === \"string\")\n    //     _slots = null;\n    // if (typeof _config === \"string\")\n    //     _config = null;\n    // if (pageName.length < 1) {\n    //     try {\n    //         _latePageN = true;\n    //         pageName = window.prompt('Please insert page name');\n    //     } catch (ex) {\n    //         console.error(ex);\n    //     }\n    // }\n\n    return {\n      configData: {\n        config: _config ? _config : [],\n        slots: _slots ? _slots : [],\n        pageName\n      },\n      latePageN: _latePageN\n    };\n  };\n\n  const setClipboard = outText => {\n    navigator.clipboard.writeText(outText).then(function () {\n      console.log(\"Copied to clipboard successfully!\");\n    }, function () {\n      console.error(\"Unable to write to clipboard.\");\n    });\n  };\n\n  const setData = () => {\n    const outText = \"\";\n    setOutput(outText);\n\n    if (isClipBChecked) {\n      // if (latePageN) {\n      //     // after windows function prompt it takes a while for using the windows navigator!\n      //     setTimeout(() => { setClipboard(outText); }, 180)\n      // } else {\n      setClipboard(outText); // }\n    }\n  };\n\n  const generateOrAdd = event => {\n    const {\n      configData,\n      latePageN\n    } = inputFromValue(inConfig, inSlots, inPageName); // const outText = configGeneration(configData, inSsp, isRopChecked);\n\n    console.log('in generate: ', slots); // console.log('in generate: ', JSON.parse(st));\n\n    switch (event.target.id) {\n      case 'button1':\n        addToSlots();\n        break;\n\n      case 'button2':\n        setData();\n        break;\n    } // setOutput(outText);\n    // if (isClipBChecked) {\n    //     if (latePageN) {\n    //         // after windows function prompt it takes a while for using the windows navigator!\n    //         setTimeout(() => { setClipboard(outText); }, 180)\n    //     } else {\n    //         setClipboard(outText);\n    //     }\n    // }\n\n  };\n\n  return React.createElement(SimpleFlexWrapper, {\n    top: \"50px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(WrapAreas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(ConfigWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(ConfigSetting, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    name: \"Use data for config generation\",\n    addSpaceH: \"4px\",\n    checked: isForConfigGeneration,\n    onChange: () => setIsForConfigGeneration(!isForConfigGeneration),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }), React.createElement(Distance, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }), \"    \", React.createElement(Slider, {\n    name: \"Save to clipboard\",\n    addSpaceH: \"4px\",\n    checked: isClipBChecked,\n    onChange: () => setIsClipBChecked(!isClipBChecked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }))), React.createElement(UnitName, {\n    marginLR: \"0\",\n    onChange: e => setUnitName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    width: \"100%\",\n    placeholder: \"Initially expanded\",\n    onChange: e => setInExpand(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Priority load\",\n    onChange: e => setPriorityLoad(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Collapse empty div\",\n    onChange: e => setCollapseEDiv(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Header bidding\",\n    onChange: e => setHeaderBidding(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Lazy load\",\n    onChange: e => setLazyLoad(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }), React.createElement(StandardInput, {\n    marginLR: \"0\",\n    placeholder: \"Ignore\",\n    onChange: e => setIgnore(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }), React.createElement(DistanceInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    placeholder: \"Size\",\n    height: \"15%\",\n    onChange: e => setSize(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    placeholder: \"Size Mapping\",\n    onChange: e => setSizeMapping(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }), React.createElement(InputField, {\n    placeholder: \"Targeting\",\n    onChange: e => setTargeting(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }), React.createElement(OutputField, {\n    style: {\n      color: output === \"Output\" ? \" grey\" : null\n    },\n    dangerouslySetInnerHTML: {\n      __html: output\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }), React.createElement(ButtonArea, {\n    name1: \"Add Unit\",\n    name2: \"Generate\",\n    color1: \"#ffc107\",\n    onClick: generateOrAdd,\n    top: \"14px\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  })));\n};\n\nexport { SlotsGeneration };","map":{"version":3,"sources":["/Users/hagen.handtke/Documents/urban_integration/src/components/SlotsGeneration.js"],"names":["React","useState","styled","InputArea","OutputArea","Slider","fontSetting","InputText","ColumnFlexWrapper","SimpleFlexWrapper","WrapAreas","Dropdown","configGeneration","bidder","StandardInput","ButtonElement","InputField","props","height","UnitNameWrapper","div","ButtonArea","justify","top","marginBottom","color1","name1","color2","name2","UnitName","marginLR","width","InputPageName","DistanceInput","OutputField","ConfigSetting","ConfigWrapper","Distance","SlotsGeneration","output","setOutput","inConfig","setInConfig","inSlots","setInSlots","isClipBChecked","setIsClipBChecked","isForConfigGeneration","setIsForConfigGeneration","inSsp","setSsp","inPageName","setInPageName","unitName","setUnitName","inExpand","setInExpand","priorityLoad","setPriorityLoad","collapseEDiv","setCollapseEDiv","headerBidding","setHeaderBidding","lazyLoad","setLazyLoad","ignore","setIgnore","size","setSize","sizeMapping","setSizeMapping","targeting","setTargeting","slots","setSlots","sspNames","key","value","Object","entries","push","addToSlots","_slots","unit","console","log","keys","inputFromValue","configString","slotString","pageName","_config","_latePageN","configData","config","latePageN","setClipboard","outText","navigator","clipboard","writeText","then","error","setData","generateOrAdd","event","target","id","e","color","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,6BAAtC,C,CACA;;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,SAA/C,QAAgE,mBAAhE;AACA,SAASC,QAAT,QAAyB,8BAAzB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AACA,MAAMC,UAAU,GAAGd,MAAM,CAACC,SAAD,CAAY;gBACrBc,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACC,MAArB,GAA8B,KAAM;;;;;;;;;CAD7D;AAYA,MAAMC,eAAe,GAAGjB,MAAM,CAACkB,GAAI;;CAAnC;;AAIA,MAAMC,UAAU,GAAIJ,KAAD,IACf,oBAAC,iBAAD;AAAmB,EAAA,OAAO,EAAEA,KAAK,CAACK,OAAlC;AAA2C,EAAA,GAAG,EAAEL,KAAK,CAACM,GAAtD;AAA2D,EAAA,KAAK,EAAE;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAe,EAAA,EAAE,EAAC,SAAlB;AAA4B,EAAA,MAAM,EAAEP,KAAK,CAACQ;AAA1C,GAAsDR,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA+DA,KAAK,CAACS,KAArE,CADJ,EAEI,oBAAC,aAAD;AAAe,EAAA,EAAE,EAAC,SAAlB;AAA4B,EAAA,MAAM,EAAET,KAAK,CAACU,MAA1C;AAAkD,EAAA,OAAO,EAAC;AAA1D,GAAqEV,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA8EA,KAAK,CAACW,KAApF,CAFJ,CADJ;;AAOA,MAAMC,QAAQ,GAAIZ,KAAD,IACb,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,SAAD;AAAW,EAAA,QAAQ,EAAEA,KAAK,CAACa,QAA3B;AAAqC,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA5C;AAA+D,EAAA,WAAW,EAAC,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;;AAMA,MAAMC,aAAa,GAAG9B,MAAM,CAACc,UAAD,CAAa;;;;;;;;;;;;MAYnCV,WAAY;;;;CAZlB;AAkBA,MAAM2B,aAAa,GAAG/B,MAAM,CAACkB,GAAI;;CAAjC;AAIA,MAAMc,WAAW,GAAGhC,MAAM,CAACE,UAAD,CAAa;;;;;CAAvC;AAOA,MAAM+B,aAAa,GAAGjC,MAAM,CAACO,iBAAD,CAAoB;;;;;;;;;;;;;CAAhD;AAeA,MAAM2B,aAAa,GAAGlC,MAAM,CAACkB,GAAI;;CAAjC;AAIA,MAAMiB,QAAQ,GAAGnC,MAAM,CAACkB,GAAI;;CAA5B;;AAMA,MAAMkB,eAAe,GAAG,MAAM;AAC1B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBvC,QAAQ,CAAC,QAAD,CAApC;AACA,QAAM,CAACwC,QAAD,EAAWC,WAAX,IAA0BzC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC0C,OAAD,EAAUC,UAAV,IAAwB3C,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC4C,cAAD,EAAiBC,iBAAjB,IAAsC7C,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAC8C,qBAAD,EAAwBC,wBAAxB,IAAoD/C,QAAQ,CAAC,IAAD,CAAlE;AACA,QAAM,CAACgD,KAAD,EAAQC,MAAR,IAAkBjD,QAAQ,CAAC,QAAD,CAAhC;AACA,QAAM,CAACkD,UAAD,EAAaC,aAAb,IAA8BnD,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACoD,QAAD,EAAWC,WAAX,IAA0BrD,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACsD,QAAD,EAAWC,WAAX,IAA0BvD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwD,YAAD,EAAeC,eAAf,IAAkCzD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC0D,YAAD,EAAeC,eAAf,IAAkC3D,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC4D,aAAD,EAAgBC,gBAAhB,IAAoC7D,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC8D,QAAD,EAAWC,WAAX,IAA0B/D,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgE,MAAD,EAASC,SAAT,IAAsBjE,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkE,IAAD,EAAOC,OAAP,IAAkBnE,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoE,WAAD,EAAcC,cAAd,IAAgCrE,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACsE,SAAD,EAAYC,YAAZ,IAA4BvE,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACwE,KAAD,EAAQC,QAAR,IAAoBzE,QAAQ,CAAC;AAAEwE,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAlC;AAEA,QAAME,QAAQ,GAAG,EAAjB;;AACA,OAAK,IAAI,CAACC,GAAD,EAAMC,KAAN,CAAT,IAAyBC,MAAM,CAACC,OAAP,CAAelE,MAAf,CAAzB,EAAiD;AAC7C8D,IAAAA,QAAQ,CAACK,IAAT,CAAcH,KAAd;AACH;;AAED,QAAMI,UAAU,GAAG,MAAM;AACrB,UAAMC,MAAM,GAAGT,KAAf;AACA,UAAMU,IAAI,GAAG,EAAb;;AAEA,QAAIpB,QAAJ,EAAc;AACVqB,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBtB,QAAjB;AACH;;AAED,QAAGe,MAAM,CAACQ,IAAP,CAAYH,IAAZ,CAAH,EACAD,MAAM,CAACT,KAAP,CAAaO,IAAb,CAAkB,EAAlB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;AAGH,GAdD;;AAiBA,QAAMc,cAAc,GAAG,CAACC,YAAD,EAAeC,UAAf,EAA2BC,QAA3B,KAAwC;AAC3D,QAAIC,OAAJ,EAAaT,MAAb;;AACA,QAAIU,UAAU,GAAG,KAAjB,CAF2D,CAG3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAO;AAAEC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,MAAM,EAAEH,OAAO,GAAGA,OAAH,GAAa,EAA9B;AAAkClB,QAAAA,KAAK,EAAES,MAAM,GAAGA,MAAH,GAAY,EAA3D;AAA+DQ,QAAAA;AAA/D,OAAd;AAAyFK,MAAAA,SAAS,EAAEH;AAApG,KAAP;AAEH,GAtCD;;AAuCA,QAAMI,YAAY,GAAIC,OAAD,IAAa;AAC9BC,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BH,OAA9B,EAAuCI,IAAvC,CAA4C,YAAY;AACpDjB,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH,KAFD,EAEG,YAAY;AACXD,MAAAA,OAAO,CAACkB,KAAR,CAAc,+BAAd;AACH,KAJD;AAKH,GAND;;AAQA,QAAMC,OAAO,GAAG,MAAM;AAClB,UAAMN,OAAO,GAAG,EAAhB;AAEAzD,IAAAA,SAAS,CAACyD,OAAD,CAAT;;AACA,QAAIpD,cAAJ,EAAoB;AAChB;AACA;AACA;AACA;AACAmD,MAAAA,YAAY,CAACC,OAAD,CAAZ,CALgB,CAMhB;AACH;AACJ,GAZD;;AAcA,QAAMO,aAAa,GAAIC,KAAD,IAAW;AAC7B,UAAM;AAAEZ,MAAAA,UAAF;AAAcE,MAAAA;AAAd,QAA4BR,cAAc,CAAC9C,QAAD,EAAWE,OAAX,EAAoBQ,UAApB,CAAhD,CAD6B,CAE7B;;AAEAiC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BZ,KAA7B,EAJ6B,CAK7B;;AACA,YAAQgC,KAAK,CAACC,MAAN,CAAaC,EAArB;AACI,WAAK,SAAL;AACI1B,QAAAA,UAAU;AACV;;AACJ,WAAK,SAAL;AACIsB,QAAAA,OAAO;AACP;AANR,KAN6B,CAgB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,GAzBD;;AA2BA,SACI,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,gCAAd;AAAgD,IAAA,SAAS,EAAC,KAA1D;AAAgE,IAAA,OAAO,EAAExD,qBAAzE;AAAgG,IAAA,QAAQ,EAAE,MAAMC,wBAAwB,CAAC,CAACD,qBAAF,CAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,UAEoB,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,mBAAd;AAAmC,IAAA,SAAS,EAAC,KAA7C;AAAmD,IAAA,OAAO,EAAEF,cAA5D;AAA4E,IAAA,QAAQ,EAAE,MAAMC,iBAAiB,CAAC,CAACD,cAAF,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpB,CADJ,CADJ,EAOI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAC,GAAnB;AAAuB,IAAA,QAAQ,EAAG+D,CAAD,IAAOtD,WAAW,CAACsD,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,GAAxB;AAA4B,IAAA,KAAK,EAAC,MAAlC;AAAyC,IAAA,WAAW,EAAC,oBAArD;AAA0E,IAAA,QAAQ,EAAG+B,CAAD,IAAOpD,WAAW,CAACoD,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,GAAxB;AAA4B,IAAA,WAAW,EAAC,eAAxC;AAAwD,IAAA,QAAQ,EAAG+B,CAAD,IAAOlD,eAAe,CAACkD,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,GAAxB;AAA4B,IAAA,WAAW,EAAC,oBAAxC;AAA6D,IAAA,QAAQ,EAAG+B,CAAD,IAAOhD,eAAe,CAACgD,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,GAAxB;AAA4B,IAAA,WAAW,EAAC,gBAAxC;AAAyD,IAAA,QAAQ,EAAG+B,CAAD,IAAO9C,gBAAgB,CAAC8C,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,GAAxB;AAA4B,IAAA,WAAW,EAAC,WAAxC;AAAoD,IAAA,QAAQ,EAAG+B,CAAD,IAAO5C,WAAW,CAAC4C,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,GAAxB;AAA4B,IAAA,WAAW,EAAC,QAAxC;AAAiD,IAAA,QAAQ,EAAG+B,CAAD,IAAO1C,SAAS,CAAC0C,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAcI,oBAAE,aAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAeI,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAC,MAAxB;AAA+B,IAAA,MAAM,EAAC,KAAtC;AAA4C,IAAA,QAAQ,EAAG+B,CAAD,IAAOxC,OAAO,CAACwC,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBI,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAC,cAAxB;AAAuC,IAAA,QAAQ,EAAG+B,CAAD,IAAOtC,cAAc,CAACsC,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAiBI,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAC,WAAxB;AAAoC,IAAA,QAAQ,EAAG+B,CAAD,IAAOpC,YAAY,CAACoC,CAAC,CAACF,MAAF,CAAS7B,KAAV,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAkBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAAEgC,MAAAA,KAAK,EAAGtE,MAAM,KAAK,QAAZ,GAAwB,OAAxB,GAAkC;AAA3C,KAApB;AAAuE,IAAA,uBAAuB,EAAE;AAAEuE,MAAAA,MAAM,EAAEvE;AAAV,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,EAmBI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,UAAnB;AAA+B,IAAA,KAAK,EAAE,UAAtC;AAAkD,IAAA,MAAM,EAAC,SAAzD;AAAmE,IAAA,OAAO,EAAEiE,aAA5E;AAA2F,IAAA,GAAG,EAAC,MAA/F;AAAsG,IAAA,OAAO,EAAC,UAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADJ,CADJ;AA0BH,CA/JD;;AAiKA,SAASlE,eAAT","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { InputArea, OutputArea } from '../styles/InputOutputFields';\n// import { Button } from '../styles/Buttons';\nimport { Slider } from '../styles/molecules/Slider';\nimport { fontSetting } from '../styles/LabelAndFont';\nimport { InputText } from '../styles/InputOutputFields';\nimport { ColumnFlexWrapper, SimpleFlexWrapper, WrapAreas } from '../styles/Wrapper';\nimport { Dropdown } from '../styles/molecules/Dropdown';\n// import { configGenration } from '../services/ConfigGeneration'\nimport { configGeneration } from '../services/CGenerationService';\nimport { bidder } from '../services/Helpers';\nimport { StandardInput } from '../styles/molecules/StandardInput';\n\nimport { ButtonElement } from '../styles/Buttons';\nconst InputField = styled(InputArea)`\n    flex: 0 0 ${props => props.height ? props.height : '30%'};\n    margin-top: 14px;\n    outline: none;\n    @media(max-width: 1363px) {\n        flex: 0 0 48%;\n    }\n    @media(max-width: 550) {\n        flex: 0 0 46%;\n    }\n`;\n\nconst UnitNameWrapper = styled.div`\n    margin: 20px 0  50px 0;\n`;\n\nconst ButtonArea = (props) => (\n    <SimpleFlexWrapper justify={props.justify} top={props.top} style={{ marginBottom: '50px' }} >\n        <ButtonElement id='button1' bColor={props.color1} {...props} >{props.name1}</ButtonElement>\n        <ButtonElement id='button2' bColor={props.color2} marginL='15px' {...props} >{props.name2}</ButtonElement>\n    </SimpleFlexWrapper>\n);\n\nconst UnitName = (props) => (\n    <UnitNameWrapper>\n        <InputText marginLR={props.marginLR} style={{ width: '100%' }} placeholder=\"Unit name\" />\n    </UnitNameWrapper>\n);\n\nconst InputPageName = styled(InputField)`\n    flex: 0 0 150px;\n    height: 24px;\n    resize: none;\n    border: none;\n    border-bottom: 1px solid  ;\n    padding: 0 0 4.2px;\n    margin: 0;\n    border-radius: 0;\n    overflow: auto;\n    white-space: nowrap;\n    font-weight: 500;\n    ${fontSetting};\n    @media(max-width: 1401px) {\n        flex: 0 0 10%;\n    }\n`;\n\nconst DistanceInput = styled.div`\n    margin-top: 14px;\n`;\n\nconst OutputField = styled(OutputArea)`\n    flex: 0 0 30vh;\n    margin-top: 14px;\n    padding: 2px 0 0 2px;\n\n`;\n\nconst ConfigSetting = styled(SimpleFlexWrapper)`\n    justify-content: flex-start;\n    justify-content: space-between;\n    max-width: 60%;\n    @media(max-width: 1624px) {\n        max-width: 70%;\n\n    }\n    @media(max-width: 1160px) {\n        flex-flow: column;\n        // min-width: 229px\n        max-width: 40px;\n    }\n`;\n\nconst ConfigWrapper = styled.div`\n    margin: 50px 0 0 0;\n`;\n\nconst Distance = styled.div`\n    width: 15px;\n`;\n\n\n\nconst SlotsGeneration = () => {\n    // Declare a new state variable, which we'll call \"count\"\n    const [output, setOutput] = useState(\"Output\");\n    const [inConfig, setInConfig] = useState([]);\n    const [inSlots, setInSlots] = useState([]);\n    const [isClipBChecked, setIsClipBChecked] = useState(true);\n    const [isForConfigGeneration, setIsForConfigGeneration] = useState(true);\n    const [inSsp, setSsp] = useState('criteo');\n    const [inPageName, setInPageName] = useState('');\n\n    const [unitName, setUnitName] = useState('');\n\n    const [inExpand, setInExpand] = useState('');\n    const [priorityLoad, setPriorityLoad] = useState('');\n    const [collapseEDiv, setCollapseEDiv] = useState('');\n    const [headerBidding, setHeaderBidding] = useState('');\n    const [lazyLoad, setLazyLoad] = useState('');\n    const [ignore, setIgnore] = useState('');\n    const [size, setSize] = useState('');\n    const [sizeMapping, setSizeMapping] = useState('');\n    const [targeting, setTargeting] = useState('');\n    const [slots, setSlots] = useState({ slots: [] });\n\n    const sspNames = [];\n    for (let [key, value] of Object.entries(bidder)) {\n        sspNames.push(value);\n    }\n\n    const addToSlots = () => {\n        const _slots = slots;\n        const unit = {};\n\n        if (lazyLoad) {\n            console.log('ll',lazyLoad);\n        }\n\n        if(Object.keys(unit) )\n        _slots.slots.push({})\n\n        console.log('add: ', slots);\n\n\n    }\n\n\n    const inputFromValue = (configString, slotString, pageName) => {\n        var _config, _slots;\n        var _latePageN = false;\n        // if (typeof configString === \"string\") {\n        //     _config = configString.replace(/([a-zA-Z0-9]+?):/g, '\"$1\":');\n        //     _config = _config.replace(/'/g, '\"');\n        //     try {\n        //         _config = JSON.parse(_config);\n        //     } catch (ex) {\n        //         alert('Config is not valid JSON \\nPlease check the console for more detail');\n        //         console.error(ex);\n        //     }\n        // }\n        // if (typeof slotString === \"string\") {\n        //     _slots = slotString.replace(/([a-zA-Z0-9]+?):/g, '\"$1\":');\n        //     _slots = _slots.replace(/'/g, '\"');\n        //     try {\n        //         _slots = JSON.parse(_slots);\n        //     } catch (ex) {\n        //         alert('Slots are not valid JSON \\nPlease check the console for more detail');\n        //         console.error(ex);\n        //     }\n        // }\n        // if (typeof _slots === \"string\")\n        //     _slots = null;\n        // if (typeof _config === \"string\")\n        //     _config = null;\n        // if (pageName.length < 1) {\n        //     try {\n        //         _latePageN = true;\n        //         pageName = window.prompt('Please insert page name');\n        //     } catch (ex) {\n        //         console.error(ex);\n        //     }\n        // }\n\n        return { configData: { config: _config ? _config : [], slots: _slots ? _slots : [], pageName }, latePageN: _latePageN };\n\n    }\n    const setClipboard = (outText) => {\n        navigator.clipboard.writeText(outText).then(function () {\n            console.log(\"Copied to clipboard successfully!\");\n        }, function () {\n            console.error(\"Unable to write to clipboard.\");\n        });\n    }\n\n    const setData = () => {\n        const outText = \"\";\n\n        setOutput(outText);\n        if (isClipBChecked) {\n            // if (latePageN) {\n            //     // after windows function prompt it takes a while for using the windows navigator!\n            //     setTimeout(() => { setClipboard(outText); }, 180)\n            // } else {\n            setClipboard(outText);\n            // }\n        }\n    }\n\n    const generateOrAdd = (event) => {\n        const { configData, latePageN } = inputFromValue(inConfig, inSlots, inPageName);\n        // const outText = configGeneration(configData, inSsp, isRopChecked);\n\n        console.log('in generate: ', slots);\n        // console.log('in generate: ', JSON.parse(st));\n        switch (event.target.id) {\n            case 'button1':\n                addToSlots();\n                break;\n            case 'button2':\n                setData();\n                break;\n        }\n\n\n        // setOutput(outText);\n        // if (isClipBChecked) {\n        //     if (latePageN) {\n        //         // after windows function prompt it takes a while for using the windows navigator!\n        //         setTimeout(() => { setClipboard(outText); }, 180)\n        //     } else {\n        //         setClipboard(outText);\n        //     }\n        // }\n    }\n\n    return (\n        <SimpleFlexWrapper top=\"50px\" >\n            <WrapAreas>\n                <ConfigWrapper>\n                    <ConfigSetting>\n                        <Slider name={\"Use data for config generation\"} addSpaceH='4px' checked={isForConfigGeneration} onChange={() => setIsForConfigGeneration(!isForConfigGeneration)} />\n                        <Distance />    <Slider name={\"Save to clipboard\"} addSpaceH='4px' checked={isClipBChecked} onChange={() => setIsClipBChecked(!isClipBChecked)} />\n                    </ConfigSetting>\n                </ConfigWrapper>\n                <UnitName marginLR='0' onChange={(e) => setUnitName(e.target.value)} />\n                <StandardInput marginLR='0' width='100%' placeholder=\"Initially expanded\" onChange={(e) => setInExpand(e.target.value)} />\n                <StandardInput marginLR='0' placeholder=\"Priority load\" onChange={(e) => setPriorityLoad(e.target.value)} />\n                <StandardInput marginLR='0' placeholder=\"Collapse empty div\" onChange={(e) => setCollapseEDiv(e.target.value)} />\n                <StandardInput marginLR='0' placeholder=\"Header bidding\" onChange={(e) => setHeaderBidding(e.target.value)} />\n                <StandardInput marginLR='0' placeholder=\"Lazy load\" onChange={(e) => setLazyLoad(e.target.value)} />\n                <StandardInput marginLR='0' placeholder=\"Ignore\" onChange={(e) => setIgnore(e.target.value)} />\n                < DistanceInput />\n                <InputField placeholder=\"Size\" height=\"15%\" onChange={(e) => setSize(e.target.value)} />\n                <InputField placeholder=\"Size Mapping\" onChange={(e) => setSizeMapping(e.target.value)} />\n                <InputField placeholder=\"Targeting\" onChange={(e) => setTargeting(e.target.value)} />\n                <OutputField style={{ color: (output === \"Output\") ? \" grey\" : null }} dangerouslySetInnerHTML={{ __html: output }}></OutputField>\n                <ButtonArea name1={\"Add Unit\"} name2={\"Generate\"} color1='#ffc107' onClick={generateOrAdd} top=\"14px\" justify=\"flex-end\" />\n            </WrapAreas>\n\n        </SimpleFlexWrapper >\n    );\n}\n\nexport { SlotsGeneration };\n"]},"metadata":{},"sourceType":"module"}